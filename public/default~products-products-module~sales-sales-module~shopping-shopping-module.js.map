{"version":3,"sources":["./src/app/services/products/categories.service.ts","./src/app/services/products/measurement-units.service.ts","./src/app/services/products/items-type.service.ts","./src/app/services/products/terms.service.ts","./src/app/core/components/forms/form-spinner.component.ts","./src/app/services/accounting/accounts.service.ts","ngx-currency/src/currency-mask.config.ts","ngx-currency/src/input.manager.ts","ngx-currency/src/input.service.ts","ngx-currency/src/input.handler.ts","ngx-currency/src/currency-mask.directive.ts","ngx-currency/src/currency-mask.module.ts","ngx-currency/ngx-currency.ts","./src/app/services/accounting/class-of-accounting.service.ts","./src/app/services/products/index.ts","./src/app/services/products/items.service.ts","./src/app/services/products/brands.service.ts","./src/app/services/accounting/index.ts","./src/app/services/accounting/accounting-groups.service.ts","./src/app/services/products/attributes.service.ts","./src/app/services/products/class-of-products.service.ts","./src/app/core/components/forms/index.ts","./src/app/services/general/tax-rates.service.ts"],"names":[],"mappings":"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","file":"default~products-products-module~sales-sales-module~shopping-shopping-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from '../../interfaces/index';\nimport { Categories } from '../../models/products-model';\nimport { ApiServerService } from '../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getAll(params: any): Observable<Categories[]> {\n    const ts  = this;\n    return ts.api.get(`/products/categories/read/all`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getChids(params: any): Observable<Categories[]> {\n    const ts  = this;\n    return ts.api.get(`/products/categories/childs`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getParents(params: any): Observable<Categories[]> {\n    const ts  = this;\n    return ts.api.get(`/products/categories/parents`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getData(params: any): Observable<Categories[]> {\n    const ts  = this;\n    return ts.api.get(`/products/categories/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from '../../interfaces/index';\nimport { MeasurementUnits, ProductsMeasurementUnits } from '../../models/products-model';\nimport { ApiServerService } from '../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeasurementUnitsService {\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getBase(): Observable<MeasurementUnits[]> {\n    const ts  = this;\n    return ts.api.get(`/measurementunits`)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getProduct(params: any): Observable<ProductsMeasurementUnits[]> {\n    const ts  = this;\n    return ts.api.get(`/products/units/read/product`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getAll(params: any): Observable<MeasurementUnits[]> {\n    const ts  = this;\n    return ts.api.get(`/products/units/read/all`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getData(params: any): Observable<MeasurementUnits[]> {\n    const ts  = this;\n    return ts.api.get(`/products/units/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from '../../interfaces/index';\nimport { ItemsType, AccountTypes, ItemsTypeAccounts } from '../../models/products-model';\nimport { ApiServerService } from '../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemsTypeService {\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getItemTypeAccounts(params: any): Observable<ItemsTypeAccounts[]> {\n    const ts  = this;\n    return ts.api.get(`/products/groups/getItemTypeAccounts`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n  getAll(params: any): Observable<ItemsType[]> {\n    const ts  = this;\n    return ts.api.get(`/products/groups/all`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getType(params: any): Observable<AccountTypes[]> {\n    const ts  = this;\n    return ts.api.get(`/accounttypes`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getData(params: any): Observable<ItemsType[]> {\n    const ts  = this;\n    return ts.api.get(`/products/groups/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from '../../interfaces/index';\nimport { Terms } from '../../models/products-model';\nimport { ApiServerService } from '../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TermsService {\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getAll(params: any): Observable<Terms[]> {\n    const ts  = this;\n    return ts.api.get(`/products/terms/all`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getData(params: any): Observable<Terms[]> {\n    const ts  = this;\n    return ts.api.get(`/products/terms/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import { AfterViewInit, ElementRef, Injectable, OnInit  } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n// Services\nimport { ApiServerService, MessagesService } from '../../../utils/index';\n\n// Base component\n\nimport { FormComponent } from './form.component';\nimport { TranslateService } from '@ngx-translate/core';\n@Injectable()\nexport class FormSpinnerComponent extends FormComponent implements OnInit, AfterViewInit {\n  constructor(public fb: FormBuilder,\n              public msg: MessagesService,\n              public api: ApiServerService,\n              public router: Router,\n              public translate: TranslateService,\n              public aRouter: ActivatedRoute,\n              public spinner: NgxSpinnerService\n  ) {\n    super(fb, msg, api, router, translate, aRouter, spinner);\n  }\n\n  showSpinner(mask: string = ''): void {\n    this.maskSpinner = mask;\n    this.spinner.show(undefined,\n      {\n        type: 'ball-triangle-path',\n        size: 'medium',\n        bdColor: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fullScreen: true\n      });\n  }\n\n  hideSpinner(): void {\n    this.spinner.hide();\n  }\n\n  fullLoad(): void {\n    this.spinner.hide();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from './../../interfaces/index';\nimport { Accounts } from './../../models/accounting-model';\nimport { ApiServerService } from './../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountsService {\n\n  data: Accounts[] = [];\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getMasterAccounts(params: any): Observable<Accounts[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accounts/read/masteraccounts`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getsubAccounts(params: any): Observable<Accounts[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accounts/read/subaccounts`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getDataAll(params: any): Observable<Accounts[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accounts/read/subaccounts`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getData(params: any): Observable<Accounts[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accounts/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import {InjectionToken} from \"@angular/core\";\n\nexport interface CurrencyMaskConfig {\n  align: string;\n  allowNegative: boolean;\n  allowZero: boolean;\n  decimal: string;\n  precision: number;\n  prefix: string;\n  suffix: string;\n  thousands: string;\n  nullable: boolean;\n  min?: number;\n  max?: number;\n  inputMode? : CurrencyMaskInputMode;\n}\n\nexport enum CurrencyMaskInputMode {\n  FINANCIAL,\n  NATURAL,\n}\n\nexport let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>(\"currency.mask.config\");\n","export class InputManager {\n\n    private _storedRawValue: string;\n\n    constructor(private htmlInputElement: any) {\n    }\n\n    setCursorAt(position: number): void {\n        if (this.htmlInputElement.setSelectionRange) {\n            this.htmlInputElement.focus();\n            this.htmlInputElement.setSelectionRange(position, position);\n        } else if (this.htmlInputElement.createTextRange) {\n            let textRange = this.htmlInputElement.createTextRange();\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", position);\n            textRange.moveStart(\"character\", position);\n            textRange.select();\n        }\n    }\n\n    updateValueAndCursor(newRawValue: string, oldLength: number, selectionStart: number): void {\n        this.rawValue = newRawValue;\n        let newLength = newRawValue.length;\n        selectionStart = selectionStart - (oldLength - newLength);\n        this.setCursorAt(selectionStart);\n    }\n\n    get canInputMoreNumbers(): boolean {\n        let onlyNumbers = this.rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g, \"\");\n        let haventReachedMaxLength = !(onlyNumbers.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let haveNumberSelected = !!(selectionStart != selectionEnd &&\n                                    this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/));\n        let startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\n        return haventReachedMaxLength || haveNumberSelected || startWithZero;\n    }\n\n    get inputSelection(): any {\n        let selectionStart = 0;\n        let selectionEnd = 0;\n\n        if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\n            selectionStart = this.htmlInputElement.selectionStart;\n            selectionEnd = this.htmlInputElement.selectionEnd;\n        } else {\n            let range = (<any>document).selection.createRange();\n\n            if (range && range.parentElement() == this.htmlInputElement) {\n                let lenght = this.htmlInputElement.value.length;\n                let normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\n                let startRange = this.htmlInputElement.createTextRange();\n                startRange.moveToBookmark(range.getBookmark());\n                let endRange = this.htmlInputElement.createTextRange();\n                endRange.collapse(false);\n\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                    selectionStart = selectionEnd = lenght;\n                } else {\n                    selectionStart = -startRange.moveStart(\"character\", -lenght);\n                    selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\n\n                    if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                        selectionEnd = lenght;\n                    } else {\n                        selectionEnd = -startRange.moveEnd(\"character\", -lenght);\n                        selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\n                    }\n                }\n            }\n        }\n\n        return {\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd\n        };\n    }\n\n    get rawValue(): string {\n        return this.htmlInputElement && this.htmlInputElement.value;\n    }\n\n    set rawValue(value: string) {\n        this._storedRawValue = value;\n\n        if (this.htmlInputElement) {\n            this.htmlInputElement.value = value;\n        }\n    }\n\n    get storedRawValue(): string {\n        return this._storedRawValue || '';\n    }\n}\n","import { InputManager } from \"./input.manager\";\nimport { CurrencyMaskConfig, CurrencyMaskInputMode } from \"./currency-mask.config\";\n\nexport class InputService {\n    private SINGLE_DIGIT_REGEX: RegExp = new RegExp(/^[0-9\\u0660-\\u0669\\u06F0-\\u06F9]$/);\n    private ONLY_NUMBERS_REGEX: RegExp = new RegExp(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g);\n\n    PER_AR_NUMBER: Map<string, string> = new Map<string, string>();\n\n    initialize() {\n        this.PER_AR_NUMBER.set(\"\\u06F0\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u06F1\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u06F2\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u06F3\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u06F4\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u06F5\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u06F6\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u06F7\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u06F8\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u06F9\", \"9\");\n\n        this.PER_AR_NUMBER.set(\"\\u0660\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u0661\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u0662\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u0663\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u0664\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u0665\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u0666\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u0667\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u0668\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u0669\", \"9\");\n    }\n\n    inputManager: InputManager;\n\n    constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {\n        this.inputManager = new InputManager(htmlInputElement);\n        this.initialize()\n    }\n\n    addNumber(keyCode: number): void {\n        const {decimal, precision, inputMode} = this.options;\n        let keyChar = String.fromCharCode(keyCode);\n        const isDecimalChar = keyChar === this.options.decimal;\n\n        if (!this.rawValue) {\n            this.rawValue = this.applyMask(false, keyChar);\n            let selectionStart:number = undefined;\n            if (inputMode === CurrencyMaskInputMode.NATURAL && precision > 0) {\n                selectionStart = this.rawValue.indexOf(decimal);\n                if (isDecimalChar) {\n                    selectionStart++;\n                }\n            }\n            this.updateFieldValue(selectionStart);\n        } else {\n            let selectionStart = this.inputSelection.selectionStart;\n            let selectionEnd = this.inputSelection.selectionEnd;\n            const rawValueStart = this.rawValue.substring(0, selectionStart);\n            let rawValueEnd = this.rawValue.substring(selectionEnd, this.rawValue.length);\n\n            // In natural mode, replace decimals instead of shifting them.\n            const inDecimalPortion = rawValueStart.indexOf(decimal) !== -1;\n            if (inputMode === CurrencyMaskInputMode.NATURAL && inDecimalPortion && selectionStart === selectionEnd) {\n              rawValueEnd = rawValueEnd.substring(1);\n            }\n\n            const newValue = rawValueStart + keyChar + rawValueEnd;\n            let nextSelectionStart = selectionStart + 1;\n            const isDecimalOrThousands = isDecimalChar || keyChar === this.options.thousands;\n            if (isDecimalOrThousands && keyChar === rawValueEnd[0]) {\n                // If the cursor is just before the decimal or thousands separator and the user types the\n                // decimal or thousands separator, move the cursor past it.\n                nextSelectionStart++;\n            } else if (!this.SINGLE_DIGIT_REGEX.test(keyChar)) {\n                // Ignore other non-numbers.\n                return;\n            }\n\n            this.rawValue = newValue;\n            this.updateFieldValue(nextSelectionStart);\n        }\n    }\n\n    applyMask(isNumber: boolean, rawValue: string, disablePadAndTrim = false): string {\n        let {allowNegative, decimal, precision, prefix, suffix, thousands, min, max, inputMode} = this.options;\n\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n        let onlyNumbers = rawValue.replace(this.ONLY_NUMBERS_REGEX, \"\");\n\n        if (!onlyNumbers && rawValue !== decimal) {\n            return \"\";\n        }\n\n        if (inputMode === CurrencyMaskInputMode.NATURAL && !isNumber && !disablePadAndTrim) {\n            rawValue = this.padOrTrimPrecision(rawValue);\n            onlyNumbers = rawValue.replace(this.ONLY_NUMBERS_REGEX, \"\");\n        }\n\n        let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)\n            .replace(/^\\u0660*/g, \"\")\n            .replace(/^\\u06F0*/g, \"\")\n            .replace(/^0*/g, \"\");\n\n        if (integerPart == \"\") {\n            integerPart = \"0\";\n        }\n        let integerValue = parseInt(integerPart);\n\n        integerPart = integerPart.replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g, thousands);\n        if (thousands && integerPart.startsWith(thousands)) {\n            integerPart = integerPart.substring(1);\n        }\n\n        let newRawValue = integerPart;\n        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n        let decimalValue = parseInt(decimalPart) || 0;\n\n        let isNegative = rawValue.indexOf(\"-\") > -1;\n\n        // Ensure max is at least as large as min.\n        max = (this.isNullOrUndefined(max) || this.isNullOrUndefined(min)) ? max : Math.max(max, min);\n\n        // Restrict to the min and max values.\n        let newValue = integerValue + (decimalValue / 100);\n        newValue = isNegative ? -newValue : newValue;\n        if (!this.isNullOrUndefined(max) && newValue > max) {\n            return this.applyMask(true, max + '');\n        } else if (!this.isNullOrUndefined(min) && newValue < min) {\n            return this.applyMask(true, min + '');\n        }\n\n        if (precision > 0) {\n            if (newRawValue == \"0\" && decimalPart.length < precision) {\n                newRawValue += decimal + \"0\".repeat(precision - 1) + decimalPart;\n            } else {\n                newRawValue += decimal + decimalPart;\n            }\n        }\n\n        let isZero = newValue == 0;\n        let operator = (isNegative && allowNegative && !isZero) ? \"-\" : \"\";\n        return operator + prefix + newRawValue + suffix;\n    }\n\n    padOrTrimPrecision(rawValue: string): string {\n        let {decimal, precision} = this.options;\n\n        let decimalIndex = rawValue.lastIndexOf(decimal);\n        if (decimalIndex === -1) {\n            decimalIndex = rawValue.length;\n            rawValue += decimal;\n        }\n\n        let decimalPortion = rawValue.substring(decimalIndex).replace(this.ONLY_NUMBERS_REGEX, \"\");\n        const actualPrecision = decimalPortion.length;\n        if (actualPrecision < precision) {\n            for (let i = actualPrecision; i < precision; i++) {\n                decimalPortion += '0';\n            }\n        } else if (actualPrecision > precision) {\n            decimalPortion = decimalPortion.substring(0, decimalPortion.length + precision - actualPrecision);\n        }\n\n        return rawValue.substring(0, decimalIndex) + decimal + decimalPortion;\n    }\n\n    clearMask(rawValue: string): number {\n        if (this.isNullable() && rawValue === \"\")\n            return null;\n\n        let value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n\n        if (this.options.thousands) {\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n        }\n\n        if (this.options.decimal) {\n            value = value.replace(this.options.decimal, \".\");\n        }\n\n        this.PER_AR_NUMBER.forEach((val: string, key: string) => {\n            const re = new RegExp(key, \"g\");\n            value = value.replace(re, val);\n        });\n        return parseFloat(value);\n    }\n\n    changeToNegative(): void {\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n            // Apply the mask to ensure the min and max values are enforced.\n            this.rawValue = this.applyMask(false, \"-\" + this.rawValue);\n        }\n    }\n\n    changeToPositive(): void {\n        // Apply the mask to ensure the min and max values are enforced.\n        this.rawValue = this.applyMask(false, this.rawValue.replace(\"-\", \"\"));\n    }\n\n    removeNumber(keyCode: number): void {\n        let {decimal, thousands, prefix, suffix, inputMode} = this.options;\n\n        if (this.isNullable() && this.value == 0) {\n            this.rawValue = null;\n            return;\n        }\n\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let selectionStart = this.inputSelection.selectionStart;\n\n        const suffixStart = this.rawValue.length - suffix.length;\n        selectionEnd = Math.min(suffixStart, Math.max(selectionEnd, prefix.length));\n        selectionStart = Math.min(suffixStart, Math.max(selectionStart, prefix.length));\n\n        // Check if selection was entirely in the prefix or suffix. \n        if (selectionStart === selectionEnd &&\n            this.inputSelection.selectionStart !== this.inputSelection.selectionEnd) {\n            this.updateFieldValue(selectionStart);\n            return;\n        }\n\n        let decimalIndex = this.rawValue.indexOf(decimal);\n        if (decimalIndex === -1) {\n            decimalIndex = this.rawValue.length;\n        }\n\n        let shiftSelection = 0;\n        let insertChars = '';\n        const isCursorInDecimals = decimalIndex < selectionEnd;\n        const isCursorImmediatelyAfterDecimalPoint = decimalIndex + 1 === selectionEnd;\n        if (selectionEnd === selectionStart) {\n            if (keyCode == 8) {\n                if (selectionStart <= prefix.length) {\n                    return;\n                }\n                selectionStart--;\n\n                // If previous char isn't a number, go back one more.\n                if (!this.rawValue.substr(selectionStart, 1).match(/\\d/)) {\n                    selectionStart--;\n                }\n\n                // In natural mode, jump backwards when in decimal portion of number.\n                if (inputMode === CurrencyMaskInputMode.NATURAL && isCursorInDecimals) {\n                    shiftSelection = -1;\n                    // when removing a single whole number, replace it with 0\n                    if (isCursorImmediatelyAfterDecimalPoint && this.value < 10 && this.value > -10) {\n                        insertChars += '0';\n                    }\n                }\n            } else if (keyCode == 46 || keyCode == 63272) {\n                if (selectionStart === suffixStart) {\n                    return;\n                }\n                selectionEnd++;\n\n                // If next char isn't a number, go one more.\n                if (!this.rawValue.substr(selectionStart, 1).match(/\\d/)) {\n                    selectionStart++;\n                    selectionEnd++;\n                }\n            }\n        }\n\n        // In natural mode, replace decimals with 0s.\n        if (inputMode === CurrencyMaskInputMode.NATURAL && selectionStart > decimalIndex) {\n            const replacedDecimalCount = selectionEnd - selectionStart;\n            for (let i = 0; i < replacedDecimalCount; i++) {\n                insertChars += '0';\n            }\n        }\n\n        let selectionFromEnd = this.rawValue.length - selectionEnd;\n        this.rawValue = this.rawValue.substring(0, selectionStart) + insertChars + this.rawValue.substring(selectionEnd);\n\n        // Remove leading thousand separator from raw value.\n        const startChar = this.rawValue.substr(prefix.length, 1);\n        if (startChar === thousands) {\n            this.rawValue = this.rawValue.substring(0, prefix.length) + this.rawValue.substring(prefix.length + 1);\n            selectionFromEnd = Math.min(selectionFromEnd, this.rawValue.length - prefix.length);\n        }\n\n        this.updateFieldValue(this.rawValue.length - selectionFromEnd + shiftSelection, true);\n    }\n\n    updateFieldValue(selectionStart?: number, disablePadAndTrim = false): void {\n        let newRawValue = this.applyMask(false, this.rawValue || \"\", disablePadAndTrim);\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n        selectionStart = Math.max(this.options.prefix.length, Math.min(selectionStart, this.rawValue.length - this.options.suffix.length));\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n    }\n\n    updateOptions(options: any): void {\n        let value: number = this.value;\n        this.options = options;\n        this.value = value;\n    }\n\n    prefixLength(): any {\n        return this.options.prefix.length;\n    }\n\n    suffixLength(): any {\n        return this.options.suffix.length;\n    }\n\n    isNullable() {\n        return this.options.nullable;\n    }\n\n    get canInputMoreNumbers(): boolean {\n        return this.inputManager.canInputMoreNumbers;\n    }\n\n    get inputSelection(): any {\n        return this.inputManager.inputSelection;\n    }\n\n    get rawValue(): string {\n        return this.inputManager.rawValue;\n    }\n\n    set rawValue(value: string) {\n        this.inputManager.rawValue = value;\n    }\n\n    get storedRawValue(): string {\n        return this.inputManager.storedRawValue;\n    }\n\n    get value(): number {\n        return this.clearMask(this.rawValue);\n    }\n\n    set value(value: number) {\n        this.rawValue = this.applyMask(true, \"\" + value);\n    }\n\n    private isNullOrUndefined(value: any) {\n        return value === null || value === undefined;\n    }\n}\n","import {InputService} from \"./input.service\";\n\nexport class InputHandler {\n\n    private inputService: InputService;\n    private onModelChange: Function;\n    private onModelTouched: Function;\n\n    constructor(htmlInputElement: HTMLInputElement, options: any) {\n        this.inputService = new InputService(htmlInputElement, options);\n    }\n\n    handleCut(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 0);\n    }\n\n    handleInput(event: any): void {\n        let selectionStart = this.inputService.inputSelection.selectionStart;\n        let keyCode = this.inputService.rawValue.charCodeAt(selectionStart - 1);\n        let rawValueLength = this.inputService.rawValue.length;\n        let storedRawValueLength = this.inputService.storedRawValue.length;\n\n        if (Math.abs(rawValueLength - storedRawValueLength) != 1) {\n            this.inputService.updateFieldValue(selectionStart);\n            this.onModelChange(this.inputService.value);\n            return;\n        }\n\n        // Restore the old value.\n        this.inputService.rawValue = this.inputService.storedRawValue;\n\n        if (rawValueLength < storedRawValueLength) {\n            // Chrome Android seems to move the cursor in response to a backspace AFTER processing the\n            // input event, so we need to wrap this in a timeout.\n            this.timer(() => {\n                // Move the cursor to just after the deleted value.\n                this.inputService.updateFieldValue(selectionStart + 1);\n\n                // Then backspace it.\n                this.inputService.removeNumber(8);\n                this.onModelChange(this.inputService.value);  \n            }, 0);\n        }\n\n        if (rawValueLength > storedRawValueLength) {\n            // Move the cursor to just before the new value.\n            this.inputService.updateFieldValue(selectionStart - 1);\n\n            // Process the character like a keypress.\n            this.handleKeypressImpl(keyCode);\n        }\n    }\n\n    handleKeydown(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\n            event.preventDefault();\n\n            if (this.inputService.inputSelection.selectionStart <= this.inputService.prefixLength() &&\n                this.inputService.inputSelection.selectionEnd >= this.inputService.rawValue.length - this.inputService.suffixLength()) {\n                this.clearValue();\n            } else {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n        }\n    }\n\n    clearValue() {\n        this.setValue(this.inputService.isNullable() ? null : 0);\n        this.onModelChange(this.inputService.value);\n    }\n\n    handleKeypress(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n        event.preventDefault();\n        if (keyCode === 97 && event.ctrlKey) {\n            return;\n        }\n\n        this.handleKeypressImpl(keyCode);\n    }\n\n    private handleKeypressImpl(keyCode: number): void {\n        switch (keyCode) {\n            case undefined:\n            case 9:\n            case 13:\n                return;\n            case 43:\n                this.inputService.changeToPositive();\n                break;\n            case 45:\n                this.inputService.changeToNegative();\n                break;\n            default:\n                if (this.inputService.canInputMoreNumbers) {\n                    let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\n                        this.setValue(null);\n                    }\n\n                    this.inputService.addNumber(keyCode);\n                }\n                break;\n        }\n\n        this.onModelChange(this.inputService.value);\n    }\n\n    handlePaste(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 1);\n    }\n\n    updateOptions(options: any): void {\n        this.inputService.updateOptions(options);\n    }\n\n    getOnModelChange(): Function {\n        return this.onModelChange;\n    }\n\n    setOnModelChange(callbackFunction: Function): void {\n        this.onModelChange = callbackFunction;\n    }\n\n    getOnModelTouched(): Function {\n        return this.onModelTouched;\n    }\n\n    setOnModelTouched(callbackFunction: Function) {\n        this.onModelTouched = callbackFunction;\n    }\n\n    setValue(value: number): void {\n        this.inputService.value = value;\n    }\n\n    /**\n     * Passthrough to setTimeout that can be stubbed out in tests.\n     */\n    private timer(callback: () => void, delayMillis: number) {\n        setTimeout(callback, delayMillis);\n    }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  Input,\n  OnInit,\n  Optional\n} from \"@angular/core\";\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {CurrencyMaskConfig, CURRENCY_MASK_CONFIG, CurrencyMaskInputMode} from \"./currency-mask.config\";\nimport {InputHandler} from \"./input.handler\";\n\nexport const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CurrencyMaskDirective),\n  multi: true,\n};\n\n@Directive({\n    selector: \"[currencyMask]\",\n    providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]\n})\nexport class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {\n\n  @Input() options: Partial<CurrencyMaskConfig> = {};\n\n  public inputHandler: InputHandler;\n  public keyValueDiffer: KeyValueDiffer<any, any>;\n\n  public optionsTemplate: CurrencyMaskConfig = {\n      align: \"right\",\n      allowNegative: true,\n      allowZero: true,\n      decimal: \".\",\n      precision: 2,\n      prefix: \"$ \",\n      suffix: \"\",\n      thousands: \",\",\n      nullable: false,\n      inputMode: CurrencyMaskInputMode.FINANCIAL\n  };\n\n  constructor(@Optional() @Inject(CURRENCY_MASK_CONFIG) private currencyMaskConfig: CurrencyMaskConfig,\n                                                        private elementRef: ElementRef,\n                                                        private keyValueDiffers: KeyValueDiffers) {\n    if (currencyMaskConfig) {\n        this.optionsTemplate = currencyMaskConfig;\n    }\n\n    this.keyValueDiffer = keyValueDiffers.find({}).create();\n  }\n\n  ngAfterViewInit() {\n    this.elementRef.nativeElement.style.textAlign = this.options && this.options.align ? this.options.align : this.optionsTemplate.align;\n  }\n\n  ngDoCheck() {\n    if (this.keyValueDiffer.diff(this.options)) {\n      this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n      this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));\n    }\n  }\n\n  ngOnInit() {\n    this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));\n  }\n\n  @HostListener(\"blur\", [\"$event\"])\n  handleBlur(event: any) {\n    this.inputHandler.getOnModelTouched().apply(event);\n  }\n\n  @HostListener(\"cut\", [\"$event\"])\n  handleCut(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleCut(event);\n    }\n  }\n\n  @HostListener(\"input\", [\"$event\"])\n  handleInput(event: any) {\n    if (this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleInput(event);\n    }\n  }\n\n  @HostListener(\"keydown\", [\"$event\"])\n  handleKeydown(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleKeydown(event);\n    }\n  }\n\n  @HostListener(\"keypress\", [\"$event\"])\n  handleKeypress(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleKeypress(event);\n    }\n  }\n\n  @HostListener(\"paste\", [\"$event\"])\n  handlePaste(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handlePaste(event);\n    }\n  }\n\n  @HostListener(\"drop\", [\"$event\"])\n  handleDrop(event: any) {\n    if (!this.isChromeAndroid()) {\n      event.preventDefault();\n    }\n  }\n\n  isChromeAndroid(): boolean {\n    return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\n  }\n\n  isReadOnly(): boolean {\n    return this.elementRef.nativeElement.hasAttribute('readonly')\n  }\n\n  registerOnChange(callbackFunction: Function): void {\n    this.inputHandler.setOnModelChange(callbackFunction);\n  }\n\n  registerOnTouched(callbackFunction: Function): void {\n    this.inputHandler.setOnModelTouched(callbackFunction);\n  }\n\n  setDisabledState(value: boolean): void {\n    this.elementRef.nativeElement.disabled = value;\n  }\n\n  writeValue(value: number): void {\n    this.inputHandler.setValue(value);\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CurrencyMaskDirective} from \"./currency-mask.directive\";\nimport {CURRENCY_MASK_CONFIG, CurrencyMaskConfig} from \"./currency-mask.config\";\n\n@NgModule({\n  imports: [ CommonModule, FormsModule ],\n  declarations: [ CurrencyMaskDirective ],\n  exports: [ CurrencyMaskDirective ]\n})\nexport class NgxCurrencyModule {\n  static forRoot(config: CurrencyMaskConfig): ModuleWithProviders<NgxCurrencyModule> {\n    return {\n      ngModule: NgxCurrencyModule,\n      providers: [{\n        provide: CURRENCY_MASK_CONFIG,\n        useValue: config,\n      }]\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CURRENCY_MASK_CONFIG as ɵa} from './src/currency-mask.config';","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse, ErrorResponse } from './../../interfaces/index';\nimport { ClassOfAccounting } from './../../models/accounting-model';\nimport { ApiServerService } from './../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClassOfAccountingService {\n\n  data: ClassOfAccounting[] = [];\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getData(params: any): Observable<ClassOfAccounting[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/clasofaccounts/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","export * from './brands.service';\r\nexport * from './categories.service';\r\nexport * from './attributes.service';\r\nexport * from './terms.service';\r\nexport * from './items.service';\r\nexport * from './class-of-products.service';\r\nexport * from './measurement-units.service';\r\nexport * from './items-type.service';\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from '../../interfaces/index';\nimport { Items } from '../../models/products-model';\nimport { ApiServerService } from '../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemsService {\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getAll(params: any): Observable<Items[]> {\n    const ts  = this;\n    return ts.api.get(`/products/items/all`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n\n  getDataSales(params: any): Observable<Items[]> {\n    const ts  = this;\n    return ts.api.get(`/products/items/read/all`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getData(params: any): Observable<Items[]> {\n    const ts  = this;\n    return ts.api.get(`/products/items/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from '../../interfaces/index';\nimport { Brands } from '../../models/products-model';\nimport { ApiServerService } from '../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandsService {\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getAll(): Observable<Brands[]> {\n    const ts  = this;\n    return ts.api.get(`/products/brands/read/all`)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getData(params: any): Observable<Brands[]> {\n    const ts  = this;\n    return ts.api.get(`/products/brands/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","export * from './class-of-accounting.service';\r\nexport * from './accounts.service';\r\nexport * from './accounting-groups.service';\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from './../../interfaces/index';\nimport { AccountingGroups } from './../../models/accounting-model';\nimport { ApiServerService } from './../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountingGroupsService {\n\n  data: AccountingGroups[] = [];\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getData(params: any): Observable<AccountingGroups[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accountinggroups/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from '../../interfaces/index';\nimport { Attributes } from '../../models/products-model';\nimport { ApiServerService } from '../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttributesService {\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getAll(params: any): Observable<Attributes[]> {\n    const ts  = this;\n    return ts.api.get(`/products/attributes/all`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getData(params: any): Observable<Attributes[]> {\n    const ts  = this;\n    return ts.api.get(`/products/attributes/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from '../../interfaces/index';\nimport { ClassOfProducts } from '../../models/products-model';\nimport { ApiServerService } from '../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClassOfProductsService {\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getData(): Observable<ClassOfProducts[]> {\n    const ts  = this;\n    return ts.api.get(`/products/class`)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","export * from './form.component';\r\nexport * from './form-spinner.component';\r\nexport * from './footer-form/footer-form.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { JsonResponse } from './../../interfaces';\r\n\r\nimport { ApiServerService } from '../../utils/api-server.service';\r\nimport { TaxRates } from './../../models/general-model'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaxRatesService {\r\n\r\n  data: TaxRates[] = [];\r\n  constructor(\r\n    private api: ApiServerService\r\n  ){}\r\n\r\n  getData(params: any): Observable<TaxRates[]> {\r\n    const ts  = this;\r\n    return ts.api.get('/general/taxerates/read', params)\r\n      .pipe( map ( (resp: JsonResponse ) => {\r\n        return resp.records;\r\n      }));\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}