{"version":3,"sources":["./src/app/services/accounting/accounting-groups.service.ts","./src/app/services/accounting/accounts.service.ts","./src/app/services/accounting/class-of-accounting.service.ts","./src/app/services/accounting/index.ts","./src/app/services/general/tax-rates.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from './../../interfaces/index';\nimport { AccountingGroups } from './../../models/accounting-model';\nimport { ApiServerService } from './../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountingGroupsService {\n\n  data: AccountingGroups[] = [];\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getData(params: any): Observable<AccountingGroups[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accountinggroups/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse } from './../../interfaces/index';\nimport { Accounts } from './../../models/accounting-model';\nimport { ApiServerService } from './../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountsService {\n\n  data: Accounts[] = [];\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getMasterAccounts(params: any): Observable<Accounts[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accounts/read/masteraccounts`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getsubAccounts(params: any): Observable<Accounts[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accounts/read/subaccounts`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getDataAll(params: any): Observable<Accounts[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accounts/read/subaccounts`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n\n  getData(params: any): Observable<Accounts[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/accounts/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { JsonResponse, ErrorResponse } from './../../interfaces/index';\nimport { ClassOfAccounting } from './../../models/accounting-model';\nimport { ApiServerService } from './../../utils/api-server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClassOfAccountingService {\n\n  data: ClassOfAccounting[] = [];\n  constructor(\n    private api: ApiServerService\n  ){}\n\n  getData(params: any): Observable<ClassOfAccounting[]> {\n    const ts  = this;\n    return ts.api.get(`/accounting/clasofaccounts/read`, params)\n      .pipe( map ( (resp: JsonResponse ) => {\n        return resp.records;\n      }));\n  }\n}\n","export * from './class-of-accounting.service';\r\nexport * from './accounts.service';\r\nexport * from './accounting-groups.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { JsonResponse } from 'src/app/interfaces';\r\n\r\nimport { ApiServerService } from '../../utils/api-server.service';\r\nimport { TaxRates } from './../../models/general-model'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaxRatesService {\r\n\r\n  data: TaxRates[] = [];\r\n  constructor(\r\n    private api: ApiServerService\r\n  ){}\r\n\r\n  getData(params: any): Observable<TaxRates[]> {\r\n    const ts  = this;\r\n    return ts.api.get('/general/taxerates/read', params)\r\n      .pipe( map ( (resp: JsonResponse ) => {\r\n        return resp.records;\r\n      }));\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}