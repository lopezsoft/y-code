{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{\"7q1N\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return MeasurementUnitsService});var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"rdQv\"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"fXoL\"),_utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"C6Ca\");let MeasurementUnitsService=(()=>{class MeasurementUnitsService{constructor(api){this.api=api}getBase(){return this.api.get(\"/measurementunits\").pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.a)(resp=>resp.records))}getProduct(params){return this.api.get(\"/products/units/read/product\",params).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.a)(resp=>resp.records))}getAll(params){return this.api.get(\"/products/units/read/all\",params).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.a)(resp=>resp.records))}getData(params){return this.api.get(\"/products/units/read\",params).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.a)(resp=>resp.records))}}return MeasurementUnitsService.ɵfac=function(t){return new(t||MeasurementUnitsService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.jc(_utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__.a))},MeasurementUnitsService.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Sb({token:MeasurementUnitsService,factory:MeasurementUnitsService.ɵfac,providedIn:\"root\"}),MeasurementUnitsService})()},TT0I:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return CurrencyMaskDirective}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return NgxCurrencyModule});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"fXoL\"),_angular_forms__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"3Pt+\"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"ofXK\"),CurrencyMaskInputMode=function(CurrencyMaskInputMode){return CurrencyMaskInputMode[CurrencyMaskInputMode.FINANCIAL=0]=\"FINANCIAL\",CurrencyMaskInputMode[CurrencyMaskInputMode.NATURAL=1]=\"NATURAL\",CurrencyMaskInputMode}({});let CURRENCY_MASK_CONFIG=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.t(\"currency.mask.config\");class InputManager{constructor(htmlInputElement){this.htmlInputElement=htmlInputElement}setCursorAt(position){if(this.htmlInputElement.setSelectionRange)this.htmlInputElement.focus(),this.htmlInputElement.setSelectionRange(position,position);else if(this.htmlInputElement.createTextRange){let textRange=this.htmlInputElement.createTextRange();textRange.collapse(!0),textRange.moveEnd(\"character\",position),textRange.moveStart(\"character\",position),textRange.select()}}updateValueAndCursor(newRawValue,oldLength,selectionStart){this.rawValue=newRawValue,this.setCursorAt(selectionStart-=oldLength-newRawValue.length)}get canInputMoreNumbers(){let haventReachedMaxLength=!(this.rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g,\"\").length>=this.htmlInputElement.maxLength&&this.htmlInputElement.maxLength>=0),selectionStart=this.inputSelection.selectionStart,selectionEnd=this.inputSelection.selectionEnd,haveNumberSelected=!(selectionStart==selectionEnd||!this.htmlInputElement.value.substring(selectionStart,selectionEnd).match(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/)),startWithZero=\"0\"==this.htmlInputElement.value.substring(0,1);return haventReachedMaxLength||haveNumberSelected||startWithZero}get inputSelection(){let selectionStart=0,selectionEnd=0;if(\"number\"==typeof this.htmlInputElement.selectionStart&&\"number\"==typeof this.htmlInputElement.selectionEnd)selectionStart=this.htmlInputElement.selectionStart,selectionEnd=this.htmlInputElement.selectionEnd;else{let range=document.selection.createRange();if(range&&range.parentElement()==this.htmlInputElement){let lenght=this.htmlInputElement.value.length,normalizedValue=this.htmlInputElement.value.replace(/\\r\\n/g,\"\\n\"),startRange=this.htmlInputElement.createTextRange();startRange.moveToBookmark(range.getBookmark());let endRange=this.htmlInputElement.createTextRange();endRange.collapse(!1),startRange.compareEndPoints(\"StartToEnd\",endRange)>-1?selectionStart=selectionEnd=lenght:(selectionStart=-startRange.moveStart(\"character\",-lenght),selectionStart+=normalizedValue.slice(0,selectionStart).split(\"\\n\").length-1,startRange.compareEndPoints(\"EndToEnd\",endRange)>-1?selectionEnd=lenght:(selectionEnd=-startRange.moveEnd(\"character\",-lenght),selectionEnd+=normalizedValue.slice(0,selectionEnd).split(\"\\n\").length-1))}}return{selectionStart:selectionStart,selectionEnd:selectionEnd}}get rawValue(){return this.htmlInputElement&&this.htmlInputElement.value}set rawValue(value){this._storedRawValue=value,this.htmlInputElement&&(this.htmlInputElement.value=value)}get storedRawValue(){return this._storedRawValue||\"\"}}class InputService{constructor(htmlInputElement,options){this.htmlInputElement=htmlInputElement,this.options=options,this.SINGLE_DIGIT_REGEX=new RegExp(/^[0-9\\u0660-\\u0669\\u06F0-\\u06F9]$/),this.ONLY_NUMBERS_REGEX=new RegExp(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g),this.PER_AR_NUMBER=new Map,this.inputManager=new InputManager(htmlInputElement),this.initialize()}initialize(){this.PER_AR_NUMBER.set(\"۰\",\"0\"),this.PER_AR_NUMBER.set(\"۱\",\"1\"),this.PER_AR_NUMBER.set(\"۲\",\"2\"),this.PER_AR_NUMBER.set(\"۳\",\"3\"),this.PER_AR_NUMBER.set(\"۴\",\"4\"),this.PER_AR_NUMBER.set(\"۵\",\"5\"),this.PER_AR_NUMBER.set(\"۶\",\"6\"),this.PER_AR_NUMBER.set(\"۷\",\"7\"),this.PER_AR_NUMBER.set(\"۸\",\"8\"),this.PER_AR_NUMBER.set(\"۹\",\"9\"),this.PER_AR_NUMBER.set(\"٠\",\"0\"),this.PER_AR_NUMBER.set(\"١\",\"1\"),this.PER_AR_NUMBER.set(\"٢\",\"2\"),this.PER_AR_NUMBER.set(\"٣\",\"3\"),this.PER_AR_NUMBER.set(\"٤\",\"4\"),this.PER_AR_NUMBER.set(\"٥\",\"5\"),this.PER_AR_NUMBER.set(\"٦\",\"6\"),this.PER_AR_NUMBER.set(\"٧\",\"7\"),this.PER_AR_NUMBER.set(\"٨\",\"8\"),this.PER_AR_NUMBER.set(\"٩\",\"9\")}addNumber(keyCode){const{decimal:decimal,precision:precision,inputMode:inputMode}=this.options;let keyChar=String.fromCharCode(keyCode);const isDecimalChar=keyChar===this.options.decimal;if(this.rawValue){let selectionStart=this.inputSelection.selectionStart,selectionEnd=this.inputSelection.selectionEnd;const rawValueStart=this.rawValue.substring(0,selectionStart);let rawValueEnd=this.rawValue.substring(selectionEnd,this.rawValue.length);const inDecimalPortion=-1!==rawValueStart.indexOf(decimal);inputMode===CurrencyMaskInputMode.NATURAL&&inDecimalPortion&&selectionStart===selectionEnd&&(rawValueEnd=rawValueEnd.substring(1));const newValue=rawValueStart+keyChar+rawValueEnd;let nextSelectionStart=selectionStart+1;if(!isDecimalChar&&keyChar!==this.options.thousands||keyChar!==rawValueEnd[0]){if(!this.SINGLE_DIGIT_REGEX.test(keyChar))return}else nextSelectionStart++;this.rawValue=newValue,this.updateFieldValue(nextSelectionStart)}else{let selectionStart;this.rawValue=this.applyMask(!1,keyChar),inputMode===CurrencyMaskInputMode.NATURAL&&precision>0&&(selectionStart=this.rawValue.indexOf(decimal),isDecimalChar&&selectionStart++),this.updateFieldValue(selectionStart)}}applyMask(isNumber,rawValue,disablePadAndTrim=!1){let{allowNegative:allowNegative,decimal:decimal,precision:precision,prefix:prefix,suffix:suffix,thousands:thousands,min:min,max:max,inputMode:inputMode}=this.options,onlyNumbers=(rawValue=isNumber?new Number(rawValue).toFixed(precision):rawValue).replace(this.ONLY_NUMBERS_REGEX,\"\");if(!onlyNumbers&&rawValue!==decimal)return\"\";inputMode!==CurrencyMaskInputMode.NATURAL||isNumber||disablePadAndTrim||(onlyNumbers=(rawValue=this.padOrTrimPrecision(rawValue)).replace(this.ONLY_NUMBERS_REGEX,\"\"));let integerPart=onlyNumbers.slice(0,onlyNumbers.length-precision).replace(/^\\u0660*/g,\"\").replace(/^\\u06F0*/g,\"\").replace(/^0*/g,\"\");\"\"==integerPart&&(integerPart=\"0\");let integerValue=parseInt(integerPart);integerPart=integerPart.replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g,thousands),thousands&&integerPart.startsWith(thousands)&&(integerPart=integerPart.substring(1));let newRawValue=integerPart,decimalPart=onlyNumbers.slice(onlyNumbers.length-precision),decimalValue=parseInt(decimalPart)||0,isNegative=rawValue.indexOf(\"-\")>-1;max=this.isNullOrUndefined(max)||this.isNullOrUndefined(min)?max:Math.max(max,min);let newValue=integerValue+decimalValue/100;return newValue=isNegative?-newValue:newValue,!this.isNullOrUndefined(max)&&newValue>max?this.applyMask(!0,max+\"\"):!this.isNullOrUndefined(min)&&newValue<min?this.applyMask(!0,min+\"\"):(precision>0&&(newRawValue+=\"0\"==newRawValue&&decimalPart.length<precision?decimal+\"0\".repeat(precision-1)+decimalPart:decimal+decimalPart),(isNegative&&allowNegative&&0!=newValue?\"-\":\"\")+prefix+newRawValue+suffix)}padOrTrimPrecision(rawValue){let{decimal:decimal,precision:precision}=this.options,decimalIndex=rawValue.lastIndexOf(decimal);-1===decimalIndex&&(decimalIndex=rawValue.length,rawValue+=decimal);let decimalPortion=rawValue.substring(decimalIndex).replace(this.ONLY_NUMBERS_REGEX,\"\");const actualPrecision=decimalPortion.length;if(actualPrecision<precision)for(let i=actualPrecision;i<precision;i++)decimalPortion+=\"0\";else actualPrecision>precision&&(decimalPortion=decimalPortion.substring(0,decimalPortion.length+precision-actualPrecision));return rawValue.substring(0,decimalIndex)+decimal+decimalPortion}clearMask(rawValue){if(this.isNullable()&&\"\"===rawValue)return null;let value=(rawValue||\"0\").replace(this.options.prefix,\"\").replace(this.options.suffix,\"\");return this.options.thousands&&(value=value.replace(new RegExp(\"\\\\\"+this.options.thousands,\"g\"),\"\")),this.options.decimal&&(value=value.replace(this.options.decimal,\".\")),this.PER_AR_NUMBER.forEach((val,key)=>{const re=new RegExp(key,\"g\");value=value.replace(re,val)}),parseFloat(value)}changeToNegative(){this.options.allowNegative&&\"\"!=this.rawValue&&\"-\"!=this.rawValue.charAt(0)&&0!=this.value&&(this.rawValue=this.applyMask(!1,\"-\"+this.rawValue))}changeToPositive(){this.rawValue=this.applyMask(!1,this.rawValue.replace(\"-\",\"\"))}removeNumber(keyCode){let{decimal:decimal,thousands:thousands,prefix:prefix,suffix:suffix,inputMode:inputMode}=this.options;if(this.isNullable()&&0==this.value)return void(this.rawValue=null);let selectionEnd=this.inputSelection.selectionEnd,selectionStart=this.inputSelection.selectionStart;const suffixStart=this.rawValue.length-suffix.length;if(selectionEnd=Math.min(suffixStart,Math.max(selectionEnd,prefix.length)),selectionStart=Math.min(suffixStart,Math.max(selectionStart,prefix.length)),selectionStart===selectionEnd&&this.inputSelection.selectionStart!==this.inputSelection.selectionEnd)return void this.updateFieldValue(selectionStart);let decimalIndex=this.rawValue.indexOf(decimal);-1===decimalIndex&&(decimalIndex=this.rawValue.length);let shiftSelection=0,insertChars=\"\";const isCursorInDecimals=decimalIndex<selectionEnd,isCursorImmediatelyAfterDecimalPoint=decimalIndex+1===selectionEnd;if(selectionEnd===selectionStart)if(8==keyCode){if(selectionStart<=prefix.length)return;selectionStart--,this.rawValue.substr(selectionStart,1).match(/\\d/)||selectionStart--,inputMode===CurrencyMaskInputMode.NATURAL&&isCursorInDecimals&&(shiftSelection=-1,isCursorImmediatelyAfterDecimalPoint&&this.value<10&&this.value>-10&&(insertChars+=\"0\"))}else if(46==keyCode||63272==keyCode){if(selectionStart===suffixStart)return;selectionEnd++,this.rawValue.substr(selectionStart,1).match(/\\d/)||(selectionStart++,selectionEnd++)}if(inputMode===CurrencyMaskInputMode.NATURAL&&selectionStart>decimalIndex){const replacedDecimalCount=selectionEnd-selectionStart;for(let i=0;i<replacedDecimalCount;i++)insertChars+=\"0\"}let selectionFromEnd=this.rawValue.length-selectionEnd;this.rawValue=this.rawValue.substring(0,selectionStart)+insertChars+this.rawValue.substring(selectionEnd),this.rawValue.substr(prefix.length,1)===thousands&&(this.rawValue=this.rawValue.substring(0,prefix.length)+this.rawValue.substring(prefix.length+1),selectionFromEnd=Math.min(selectionFromEnd,this.rawValue.length-prefix.length)),this.updateFieldValue(this.rawValue.length-selectionFromEnd+shiftSelection,!0)}updateFieldValue(selectionStart,disablePadAndTrim=!1){let newRawValue=this.applyMask(!1,this.rawValue||\"\",disablePadAndTrim);selectionStart=null==selectionStart?this.rawValue.length:selectionStart,selectionStart=Math.max(this.options.prefix.length,Math.min(selectionStart,this.rawValue.length-this.options.suffix.length)),this.inputManager.updateValueAndCursor(newRawValue,this.rawValue.length,selectionStart)}updateOptions(options){let value=this.value;this.options=options,this.value=value}prefixLength(){return this.options.prefix.length}suffixLength(){return this.options.suffix.length}isNullable(){return this.options.nullable}get canInputMoreNumbers(){return this.inputManager.canInputMoreNumbers}get inputSelection(){return this.inputManager.inputSelection}get rawValue(){return this.inputManager.rawValue}set rawValue(value){this.inputManager.rawValue=value}get storedRawValue(){return this.inputManager.storedRawValue}get value(){return this.clearMask(this.rawValue)}set value(value){this.rawValue=this.applyMask(!0,\"\"+value)}isNullOrUndefined(value){return null==value}}class InputHandler{constructor(htmlInputElement,options){this.inputService=new InputService(htmlInputElement,options)}handleCut(event){setTimeout(()=>{this.inputService.updateFieldValue(),this.setValue(this.inputService.value),this.onModelChange(this.inputService.value)},0)}handleInput(event){let selectionStart=this.inputService.inputSelection.selectionStart,keyCode=this.inputService.rawValue.charCodeAt(selectionStart-1),rawValueLength=this.inputService.rawValue.length,storedRawValueLength=this.inputService.storedRawValue.length;if(1!=Math.abs(rawValueLength-storedRawValueLength))return this.inputService.updateFieldValue(selectionStart),void this.onModelChange(this.inputService.value);this.inputService.rawValue=this.inputService.storedRawValue,rawValueLength<storedRawValueLength&&this.timer(()=>{this.inputService.updateFieldValue(selectionStart+1),this.inputService.removeNumber(8),this.onModelChange(this.inputService.value)},0),rawValueLength>storedRawValueLength&&(this.inputService.updateFieldValue(selectionStart-1),this.handleKeypressImpl(keyCode))}handleKeydown(event){let keyCode=event.which||event.charCode||event.keyCode;8!=keyCode&&46!=keyCode&&63272!=keyCode||(event.preventDefault(),this.inputService.inputSelection.selectionStart<=this.inputService.prefixLength()&&this.inputService.inputSelection.selectionEnd>=this.inputService.rawValue.length-this.inputService.suffixLength()?this.clearValue():(this.inputService.removeNumber(keyCode),this.onModelChange(this.inputService.value)))}clearValue(){this.setValue(this.inputService.isNullable()?null:0),this.onModelChange(this.inputService.value)}handleKeypress(event){let keyCode=event.which||event.charCode||event.keyCode;event.preventDefault(),97===keyCode&&event.ctrlKey||this.handleKeypressImpl(keyCode)}handleKeypressImpl(keyCode){switch(keyCode){case void 0:case 9:case 13:return;case 43:this.inputService.changeToPositive();break;case 45:this.inputService.changeToNegative();break;default:this.inputService.canInputMoreNumbers&&(Math.abs(this.inputService.inputSelection.selectionEnd-this.inputService.inputSelection.selectionStart)==this.inputService.rawValue.length&&this.setValue(null),this.inputService.addNumber(keyCode))}this.onModelChange(this.inputService.value)}handlePaste(event){setTimeout(()=>{this.inputService.updateFieldValue(),this.setValue(this.inputService.value),this.onModelChange(this.inputService.value)},1)}updateOptions(options){this.inputService.updateOptions(options)}getOnModelChange(){return this.onModelChange}setOnModelChange(callbackFunction){this.onModelChange=callbackFunction}getOnModelTouched(){return this.onModelTouched}setOnModelTouched(callbackFunction){this.onModelTouched=callbackFunction}setValue(value){this.inputService.value=value}timer(callback,delayMillis){setTimeout(callback,delayMillis)}}const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR={provide:_angular_forms__WEBPACK_IMPORTED_MODULE_1__.n,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.bb)(()=>CurrencyMaskDirective),multi:!0};let CurrencyMaskDirective=(()=>{class CurrencyMaskDirective{constructor(currencyMaskConfig,elementRef,keyValueDiffers){this.currencyMaskConfig=currencyMaskConfig,this.elementRef=elementRef,this.keyValueDiffers=keyValueDiffers,this.options={},this.optionsTemplate={align:\"right\",allowNegative:!0,allowZero:!0,decimal:\".\",precision:2,prefix:\"$ \",suffix:\"\",thousands:\",\",nullable:!1,inputMode:CurrencyMaskInputMode.FINANCIAL},currencyMaskConfig&&(this.optionsTemplate=currencyMaskConfig),this.keyValueDiffer=keyValueDiffers.find({}).create()}ngAfterViewInit(){this.elementRef.nativeElement.style.textAlign=this.options&&this.options.align?this.options.align:this.optionsTemplate.align}ngDoCheck(){this.keyValueDiffer.diff(this.options)&&(this.elementRef.nativeElement.style.textAlign=this.options.align?this.options.align:this.optionsTemplate.align,this.inputHandler.updateOptions(Object.assign({},this.optionsTemplate,this.options)))}ngOnInit(){this.inputHandler=new InputHandler(this.elementRef.nativeElement,Object.assign({},this.optionsTemplate,this.options))}handleBlur(event){this.inputHandler.getOnModelTouched().apply(event)}handleCut(event){this.isChromeAndroid()||!this.isReadOnly()&&this.inputHandler.handleCut(event)}handleInput(event){this.isChromeAndroid()&&!this.isReadOnly()&&this.inputHandler.handleInput(event)}handleKeydown(event){this.isChromeAndroid()||!this.isReadOnly()&&this.inputHandler.handleKeydown(event)}handleKeypress(event){this.isChromeAndroid()||!this.isReadOnly()&&this.inputHandler.handleKeypress(event)}handlePaste(event){this.isChromeAndroid()||!this.isReadOnly()&&this.inputHandler.handlePaste(event)}handleDrop(event){this.isChromeAndroid()||event.preventDefault()}isChromeAndroid(){return/chrome/i.test(navigator.userAgent)&&/android/i.test(navigator.userAgent)}isReadOnly(){return this.elementRef.nativeElement.hasAttribute(\"readonly\")}registerOnChange(callbackFunction){this.inputHandler.setOnModelChange(callbackFunction)}registerOnTouched(callbackFunction){this.inputHandler.setOnModelTouched(callbackFunction)}setDisabledState(value){this.elementRef.nativeElement.disabled=value}writeValue(value){this.inputHandler.setValue(value)}}return CurrencyMaskDirective.ɵfac=function(t){return new(t||CurrencyMaskDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Wb(CURRENCY_MASK_CONFIG,8),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Wb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.n),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Wb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.x))},CurrencyMaskDirective.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Rb({type:CurrencyMaskDirective,selectors:[[\"\",\"currencyMask\",\"\"]],hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.mc(\"blur\",function($event){return ctx.handleBlur($event)})(\"cut\",function($event){return ctx.handleCut($event)})(\"input\",function($event){return ctx.handleInput($event)})(\"keydown\",function($event){return ctx.handleKeydown($event)})(\"keypress\",function($event){return ctx.handleKeypress($event)})(\"paste\",function($event){return ctx.handlePaste($event)})(\"drop\",function($event){return ctx.handleDrop($event)})},inputs:{options:\"options\"},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.Hb([CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR])]}),CurrencyMaskDirective})(),NgxCurrencyModule=(()=>{class NgxCurrencyModule{static forRoot(config){return{ngModule:NgxCurrencyModule,providers:[{provide:CURRENCY_MASK_CONFIG,useValue:config}]}}}return NgxCurrencyModule.ɵfac=function(t){return new(t||NgxCurrencyModule)},NgxCurrencyModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ub({type:NgxCurrencyModule}),NgxCurrencyModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Tb({imports:[[_angular_common__WEBPACK_IMPORTED_MODULE_2__.c,_angular_forms__WEBPACK_IMPORTED_MODULE_1__.j]]}),NgxCurrencyModule})()},UnFQ:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"b\",function(){return brands_service_BrandsService}),__webpack_require__.d(__webpack_exports__,\"c\",function(){return categories_service_CategoriesService}),__webpack_require__.d(__webpack_exports__,\"a\",function(){return attributes_service_AttributesService}),__webpack_require__.d(__webpack_exports__,\"h\",function(){return terms_service_TermsService}),__webpack_require__.d(__webpack_exports__,\"e\",function(){return items_service_ItemsService}),__webpack_require__.d(__webpack_exports__,\"d\",function(){return class_of_products_service_ClassOfProductsService}),__webpack_require__.d(__webpack_exports__,\"g\",function(){return measurement_units_service.a}),__webpack_require__.d(__webpack_exports__,\"f\",function(){return items_type_service_ItemsTypeService});var map=__webpack_require__(\"rdQv\"),core=__webpack_require__(\"fXoL\"),api_server_service=__webpack_require__(\"C6Ca\");let brands_service_BrandsService=(()=>{class BrandsService{constructor(api){this.api=api}getAll(){return this.api.get(\"/products/brands/read/all\").pipe(Object(map.a)(resp=>resp.records))}getData(params){return this.api.get(\"/products/brands/read\",params).pipe(Object(map.a)(resp=>resp.records))}}return BrandsService.ɵfac=function(t){return new(t||BrandsService)(core.jc(api_server_service.a))},BrandsService.ɵprov=core.Sb({token:BrandsService,factory:BrandsService.ɵfac,providedIn:\"root\"}),BrandsService})(),categories_service_CategoriesService=(()=>{class CategoriesService{constructor(api){this.api=api}getAll(params){return this.api.get(\"/products/categories/read/all\",params).pipe(Object(map.a)(resp=>resp.records))}getChids(params){return this.api.get(\"/products/categories/childs\",params).pipe(Object(map.a)(resp=>resp.records))}getParents(params){return this.api.get(\"/products/categories/parents\",params).pipe(Object(map.a)(resp=>resp.records))}getData(params){return this.api.get(\"/products/categories/read\",params).pipe(Object(map.a)(resp=>resp.records))}}return CategoriesService.ɵfac=function(t){return new(t||CategoriesService)(core.jc(api_server_service.a))},CategoriesService.ɵprov=core.Sb({token:CategoriesService,factory:CategoriesService.ɵfac,providedIn:\"root\"}),CategoriesService})(),attributes_service_AttributesService=(()=>{class AttributesService{constructor(api){this.api=api}getAll(params){return this.api.get(\"/products/attributes/all\",params).pipe(Object(map.a)(resp=>resp.records))}getData(params){return this.api.get(\"/products/attributes/read\",params).pipe(Object(map.a)(resp=>resp.records))}}return AttributesService.ɵfac=function(t){return new(t||AttributesService)(core.jc(api_server_service.a))},AttributesService.ɵprov=core.Sb({token:AttributesService,factory:AttributesService.ɵfac,providedIn:\"root\"}),AttributesService})(),terms_service_TermsService=(()=>{class TermsService{constructor(api){this.api=api}getAll(params){return this.api.get(\"/products/terms/all\",params).pipe(Object(map.a)(resp=>resp.records))}getData(params){return this.api.get(\"/products/terms/read\",params).pipe(Object(map.a)(resp=>resp.records))}}return TermsService.ɵfac=function(t){return new(t||TermsService)(core.jc(api_server_service.a))},TermsService.ɵprov=core.Sb({token:TermsService,factory:TermsService.ɵfac,providedIn:\"root\"}),TermsService})(),items_service_ItemsService=(()=>{class ItemsService{constructor(api){this.api=api}getAll(params){return this.api.get(\"/products/items/all\",params).pipe(Object(map.a)(resp=>resp.records))}getSalesProducts(params){return this.api.get(\"/products/items/read/sales\",params).pipe(Object(map.a)(resp=>resp.records))}getDataSales(params){return this.api.get(\"/products/items/read/all\",params).pipe(Object(map.a)(resp=>resp.records))}getData(params){return this.api.get(\"/products/items/read\",params).pipe(Object(map.a)(resp=>resp.records))}}return ItemsService.ɵfac=function(t){return new(t||ItemsService)(core.jc(api_server_service.a))},ItemsService.ɵprov=core.Sb({token:ItemsService,factory:ItemsService.ɵfac,providedIn:\"root\"}),ItemsService})(),class_of_products_service_ClassOfProductsService=(()=>{class ClassOfProductsService{constructor(api){this.api=api}getData(){return this.api.get(\"/products/class\").pipe(Object(map.a)(resp=>resp.records))}}return ClassOfProductsService.ɵfac=function(t){return new(t||ClassOfProductsService)(core.jc(api_server_service.a))},ClassOfProductsService.ɵprov=core.Sb({token:ClassOfProductsService,factory:ClassOfProductsService.ɵfac,providedIn:\"root\"}),ClassOfProductsService})();var measurement_units_service=__webpack_require__(\"7q1N\");let items_type_service_ItemsTypeService=(()=>{class ItemsTypeService{constructor(api){this.api=api}getItemTypeAccounts(params){return this.api.get(\"/products/groups/getItemTypeAccounts\",params).pipe(Object(map.a)(resp=>resp.records))}getAll(params){return this.api.get(\"/products/groups/all\",params).pipe(Object(map.a)(resp=>resp.records))}getType(params){return this.api.get(\"/accounttypes\",params).pipe(Object(map.a)(resp=>resp.records))}getData(params){return this.api.get(\"/products/groups/read\",params).pipe(Object(map.a)(resp=>resp.records))}}return ItemsTypeService.ɵfac=function(t){return new(t||ItemsTypeService)(core.jc(api_server_service.a))},ItemsTypeService.ɵprov=core.Sb({token:ItemsTypeService,factory:ItemsTypeService.ɵfac,providedIn:\"root\"}),ItemsTypeService})()},dKyG:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"c\",function(){return class_of_accounting_service_ClassOfAccountingService}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return accounts_service_AccountsService}),__webpack_require__.d(__webpack_exports__,\"a\",function(){return accounting_groups_service.a});var map=__webpack_require__(\"rdQv\"),core=__webpack_require__(\"fXoL\"),api_server_service=__webpack_require__(\"C6Ca\");let class_of_accounting_service_ClassOfAccountingService=(()=>{class ClassOfAccountingService{constructor(api){this.api=api,this.data=[]}getData(params){return this.api.get(\"/accounting/clasofaccounts/read\",params).pipe(Object(map.a)(resp=>resp.records))}}return ClassOfAccountingService.ɵfac=function(t){return new(t||ClassOfAccountingService)(core.jc(api_server_service.a))},ClassOfAccountingService.ɵprov=core.Sb({token:ClassOfAccountingService,factory:ClassOfAccountingService.ɵfac,providedIn:\"root\"}),ClassOfAccountingService})(),accounts_service_AccountsService=(()=>{class AccountsService{constructor(api){this.api=api,this.data=[]}getMasterAccounts(params){return this.api.get(\"/accounting/accounts/read/masteraccounts\",params).pipe(Object(map.a)(resp=>resp.records))}getsubAccounts(params){return this.api.get(\"/accounting/accounts/read/subaccounts\",params).pipe(Object(map.a)(resp=>resp.records))}getDataAll(params){return this.api.get(\"/accounting/accounts/read/subaccounts\",params).pipe(Object(map.a)(resp=>resp.records))}getData(params){return this.api.get(\"/accounting/accounts/read\",params).pipe(Object(map.a)(resp=>resp.records))}}return AccountsService.ɵfac=function(t){return new(t||AccountsService)(core.jc(api_server_service.a))},AccountsService.ɵprov=core.Sb({token:AccountsService,factory:AccountsService.ɵfac,providedIn:\"root\"}),AccountsService})();var accounting_groups_service=__webpack_require__(\"fFJT\")},fFJT:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return AccountingGroupsService});var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"rdQv\"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"fXoL\"),_utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"C6Ca\");let AccountingGroupsService=(()=>{class AccountingGroupsService{constructor(api){this.api=api,this.data=[]}getData(params){return this.api.get(\"/accounting/accountinggroups/read\",params).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.a)(resp=>resp.records))}}return AccountingGroupsService.ɵfac=function(t){return new(t||AccountingGroupsService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.jc(_utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__.a))},AccountingGroupsService.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Sb({token:AccountingGroupsService,factory:AccountingGroupsService.ɵfac,providedIn:\"root\"}),AccountingGroupsService})()},xg8E:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return form_component.a}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return form_spinner_component_FormSpinnerComponent});var form_component=__webpack_require__(\"TK7J\"),core=__webpack_require__(\"fXoL\"),fesm2015_forms=__webpack_require__(\"3Pt+\"),utils=__webpack_require__(\"YMfE\"),router=__webpack_require__(\"tyNb\"),ngx_translate_core=__webpack_require__(\"sYmb\"),ngx_spinner=__webpack_require__(\"JqCM\");let form_spinner_component_FormSpinnerComponent=(()=>{class FormSpinnerComponent extends form_component.a{constructor(fb,msg,api,router,translate,aRouter,spinner){super(fb,msg,api,router,translate,aRouter,spinner),this.fb=fb,this.msg=msg,this.api=api,this.router=router,this.translate=translate,this.aRouter=aRouter,this.spinner=spinner}showSpinner(mask=\"\"){this.maskSpinner=mask,this.spinner.show(void 0,{type:\"ball-triangle-path\",size:\"medium\",bdColor:\"rgba(0, 0, 0, 0.8)\",color:\"#fff\",fullScreen:!0})}hideSpinner(){this.spinner.hide()}fullLoad(){this.spinner.hide()}}return FormSpinnerComponent.ɵfac=function(t){return new(t||FormSpinnerComponent)(core.jc(fesm2015_forms.e),core.jc(utils.b),core.jc(utils.a),core.jc(router.c),core.jc(ngx_translate_core.d),core.jc(router.a),core.jc(ngx_spinner.c))},FormSpinnerComponent.ɵprov=core.Sb({token:FormSpinnerComponent,factory:FormSpinnerComponent.ɵfac}),FormSpinnerComponent})();__webpack_require__(\"uHPU\")},zC4a:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return TaxRatesService});var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"rdQv\"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"fXoL\"),_utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"C6Ca\");let TaxRatesService=(()=>{class TaxRatesService{constructor(api){this.api=api,this.data=[]}getData(params){return this.api.get(\"/general/taxerates/read\",params).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.a)(resp=>resp.records))}}return TaxRatesService.ɵfac=function(t){return new(t||TaxRatesService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.jc(_utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__.a))},TaxRatesService.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Sb({token:TaxRatesService,factory:TaxRatesService.ɵfac,providedIn:\"root\"}),TaxRatesService})()}}]);","name":"5-es2015.0eeb3214b0cc10b323ae.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[5],{\n\n/***/ \"7q1N\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MeasurementUnitsService; });\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"rdQv\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"C6Ca\");\n\r\n\r\n\r\nlet MeasurementUnitsService = /*@__PURE__*/ (() => {\r\n    class MeasurementUnitsService {\r\n        constructor(api) {\r\n            this.api = api;\r\n        }\r\n        getBase() {\r\n            const ts = this;\r\n            return ts.api.get(`/measurementunits`)\r\n                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__[/* map */ \"a\"])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getProduct(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/units/read/product`, params)\r\n                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__[/* map */ \"a\"])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getAll(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/units/read/all`, params)\r\n                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__[/* map */ \"a\"])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/units/read`, params)\r\n                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__[/* map */ \"a\"])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    MeasurementUnitsService.ɵfac = function MeasurementUnitsService_Factory(t) { return new (t || MeasurementUnitsService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵinject */ \"jc\"](_utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__[/* ApiServerService */ \"a\"])); };\r\n    MeasurementUnitsService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjectable */ \"Sb\"]({ token: MeasurementUnitsService, factory: MeasurementUnitsService.ɵfac, providedIn: 'root' });\r\n    return MeasurementUnitsService;\r\n})();\r\n\n\n/***/ }),\n\n/***/ \"TT0I\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CurrencyMaskDirective; });\n/* unused harmony export CurrencyMaskInputMode */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NgxCurrencyModule; });\n/* unused harmony export ɵa */\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"3Pt+\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"ofXK\");\n\n\n\n\nvar CurrencyMaskInputMode = /*@__PURE__*/ (function (CurrencyMaskInputMode) {\n    CurrencyMaskInputMode[CurrencyMaskInputMode[\"FINANCIAL\"] = 0] = \"FINANCIAL\";\n    CurrencyMaskInputMode[CurrencyMaskInputMode[\"NATURAL\"] = 1] = \"NATURAL\";\n    return CurrencyMaskInputMode;\n})({});\nlet CURRENCY_MASK_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* InjectionToken */ \"t\"](\"currency.mask.config\");\nclass InputManager {\n    constructor(htmlInputElement) {\n        this.htmlInputElement = htmlInputElement;\n    }\n    setCursorAt(position) {\n        if (this.htmlInputElement.setSelectionRange) {\n            this.htmlInputElement.focus();\n            this.htmlInputElement.setSelectionRange(position, position);\n        }\n        else if (this.htmlInputElement.createTextRange) {\n            let textRange = this.htmlInputElement.createTextRange();\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", position);\n            textRange.moveStart(\"character\", position);\n            textRange.select();\n        }\n    }\n    updateValueAndCursor(newRawValue, oldLength, selectionStart) {\n        this.rawValue = newRawValue;\n        let newLength = newRawValue.length;\n        selectionStart = selectionStart - (oldLength - newLength);\n        this.setCursorAt(selectionStart);\n    }\n    get canInputMoreNumbers() {\n        let onlyNumbers = this.rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g, \"\");\n        let haventReachedMaxLength = !(onlyNumbers.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let haveNumberSelected = !!(selectionStart != selectionEnd &&\n            this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/));\n        let startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\n        return haventReachedMaxLength || haveNumberSelected || startWithZero;\n    }\n    get inputSelection() {\n        let selectionStart = 0;\n        let selectionEnd = 0;\n        if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\n            selectionStart = this.htmlInputElement.selectionStart;\n            selectionEnd = this.htmlInputElement.selectionEnd;\n        }\n        else {\n            let range = document.selection.createRange();\n            if (range && range.parentElement() == this.htmlInputElement) {\n                let lenght = this.htmlInputElement.value.length;\n                let normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\n                let startRange = this.htmlInputElement.createTextRange();\n                startRange.moveToBookmark(range.getBookmark());\n                let endRange = this.htmlInputElement.createTextRange();\n                endRange.collapse(false);\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                    selectionStart = selectionEnd = lenght;\n                }\n                else {\n                    selectionStart = -startRange.moveStart(\"character\", -lenght);\n                    selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\n                    if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                        selectionEnd = lenght;\n                    }\n                    else {\n                        selectionEnd = -startRange.moveEnd(\"character\", -lenght);\n                        selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\n                    }\n                }\n            }\n        }\n        return {\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd\n        };\n    }\n    get rawValue() {\n        return this.htmlInputElement && this.htmlInputElement.value;\n    }\n    set rawValue(value) {\n        this._storedRawValue = value;\n        if (this.htmlInputElement) {\n            this.htmlInputElement.value = value;\n        }\n    }\n    get storedRawValue() {\n        return this._storedRawValue || '';\n    }\n}\nclass InputService {\n    constructor(htmlInputElement, options) {\n        this.htmlInputElement = htmlInputElement;\n        this.options = options;\n        this.SINGLE_DIGIT_REGEX = new RegExp(/^[0-9\\u0660-\\u0669\\u06F0-\\u06F9]$/);\n        this.ONLY_NUMBERS_REGEX = new RegExp(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g);\n        this.PER_AR_NUMBER = new Map();\n        this.inputManager = new InputManager(htmlInputElement);\n        this.initialize();\n    }\n    initialize() {\n        this.PER_AR_NUMBER.set(\"\\u06F0\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u06F1\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u06F2\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u06F3\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u06F4\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u06F5\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u06F6\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u06F7\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u06F8\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u06F9\", \"9\");\n        this.PER_AR_NUMBER.set(\"\\u0660\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u0661\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u0662\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u0663\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u0664\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u0665\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u0666\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u0667\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u0668\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u0669\", \"9\");\n    }\n    addNumber(keyCode) {\n        const { decimal, precision, inputMode } = this.options;\n        let keyChar = String.fromCharCode(keyCode);\n        const isDecimalChar = keyChar === this.options.decimal;\n        if (!this.rawValue) {\n            this.rawValue = this.applyMask(false, keyChar);\n            let selectionStart = undefined;\n            if (inputMode === CurrencyMaskInputMode.NATURAL && precision > 0) {\n                selectionStart = this.rawValue.indexOf(decimal);\n                if (isDecimalChar) {\n                    selectionStart++;\n                }\n            }\n            this.updateFieldValue(selectionStart);\n        }\n        else {\n            let selectionStart = this.inputSelection.selectionStart;\n            let selectionEnd = this.inputSelection.selectionEnd;\n            const rawValueStart = this.rawValue.substring(0, selectionStart);\n            let rawValueEnd = this.rawValue.substring(selectionEnd, this.rawValue.length);\n            // In natural mode, replace decimals instead of shifting them.\n            const inDecimalPortion = rawValueStart.indexOf(decimal) !== -1;\n            if (inputMode === CurrencyMaskInputMode.NATURAL && inDecimalPortion && selectionStart === selectionEnd) {\n                rawValueEnd = rawValueEnd.substring(1);\n            }\n            const newValue = rawValueStart + keyChar + rawValueEnd;\n            let nextSelectionStart = selectionStart + 1;\n            const isDecimalOrThousands = isDecimalChar || keyChar === this.options.thousands;\n            if (isDecimalOrThousands && keyChar === rawValueEnd[0]) {\n                // If the cursor is just before the decimal or thousands separator and the user types the\n                // decimal or thousands separator, move the cursor past it.\n                nextSelectionStart++;\n            }\n            else if (!this.SINGLE_DIGIT_REGEX.test(keyChar)) {\n                // Ignore other non-numbers.\n                return;\n            }\n            this.rawValue = newValue;\n            this.updateFieldValue(nextSelectionStart);\n        }\n    }\n    applyMask(isNumber, rawValue, disablePadAndTrim = false) {\n        let { allowNegative, decimal, precision, prefix, suffix, thousands, min, max, inputMode } = this.options;\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n        let onlyNumbers = rawValue.replace(this.ONLY_NUMBERS_REGEX, \"\");\n        if (!onlyNumbers && rawValue !== decimal) {\n            return \"\";\n        }\n        if (inputMode === CurrencyMaskInputMode.NATURAL && !isNumber && !disablePadAndTrim) {\n            rawValue = this.padOrTrimPrecision(rawValue);\n            onlyNumbers = rawValue.replace(this.ONLY_NUMBERS_REGEX, \"\");\n        }\n        let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)\n            .replace(/^\\u0660*/g, \"\")\n            .replace(/^\\u06F0*/g, \"\")\n            .replace(/^0*/g, \"\");\n        if (integerPart == \"\") {\n            integerPart = \"0\";\n        }\n        let integerValue = parseInt(integerPart);\n        integerPart = integerPart.replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g, thousands);\n        if (thousands && integerPart.startsWith(thousands)) {\n            integerPart = integerPart.substring(1);\n        }\n        let newRawValue = integerPart;\n        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n        let decimalValue = parseInt(decimalPart) || 0;\n        let isNegative = rawValue.indexOf(\"-\") > -1;\n        // Ensure max is at least as large as min.\n        max = (this.isNullOrUndefined(max) || this.isNullOrUndefined(min)) ? max : Math.max(max, min);\n        // Restrict to the min and max values.\n        let newValue = integerValue + (decimalValue / 100);\n        newValue = isNegative ? -newValue : newValue;\n        if (!this.isNullOrUndefined(max) && newValue > max) {\n            return this.applyMask(true, max + '');\n        }\n        else if (!this.isNullOrUndefined(min) && newValue < min) {\n            return this.applyMask(true, min + '');\n        }\n        if (precision > 0) {\n            if (newRawValue == \"0\" && decimalPart.length < precision) {\n                newRawValue += decimal + \"0\".repeat(precision - 1) + decimalPart;\n            }\n            else {\n                newRawValue += decimal + decimalPart;\n            }\n        }\n        let isZero = newValue == 0;\n        let operator = (isNegative && allowNegative && !isZero) ? \"-\" : \"\";\n        return operator + prefix + newRawValue + suffix;\n    }\n    padOrTrimPrecision(rawValue) {\n        let { decimal, precision } = this.options;\n        let decimalIndex = rawValue.lastIndexOf(decimal);\n        if (decimalIndex === -1) {\n            decimalIndex = rawValue.length;\n            rawValue += decimal;\n        }\n        let decimalPortion = rawValue.substring(decimalIndex).replace(this.ONLY_NUMBERS_REGEX, \"\");\n        const actualPrecision = decimalPortion.length;\n        if (actualPrecision < precision) {\n            for (let i = actualPrecision; i < precision; i++) {\n                decimalPortion += '0';\n            }\n        }\n        else if (actualPrecision > precision) {\n            decimalPortion = decimalPortion.substring(0, decimalPortion.length + precision - actualPrecision);\n        }\n        return rawValue.substring(0, decimalIndex) + decimal + decimalPortion;\n    }\n    clearMask(rawValue) {\n        if (this.isNullable() && rawValue === \"\")\n            return null;\n        let value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n        if (this.options.thousands) {\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n        }\n        if (this.options.decimal) {\n            value = value.replace(this.options.decimal, \".\");\n        }\n        this.PER_AR_NUMBER.forEach((val, key) => {\n            const re = new RegExp(key, \"g\");\n            value = value.replace(re, val);\n        });\n        return parseFloat(value);\n    }\n    changeToNegative() {\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n            // Apply the mask to ensure the min and max values are enforced.\n            this.rawValue = this.applyMask(false, \"-\" + this.rawValue);\n        }\n    }\n    changeToPositive() {\n        // Apply the mask to ensure the min and max values are enforced.\n        this.rawValue = this.applyMask(false, this.rawValue.replace(\"-\", \"\"));\n    }\n    removeNumber(keyCode) {\n        let { decimal, thousands, prefix, suffix, inputMode } = this.options;\n        if (this.isNullable() && this.value == 0) {\n            this.rawValue = null;\n            return;\n        }\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let selectionStart = this.inputSelection.selectionStart;\n        const suffixStart = this.rawValue.length - suffix.length;\n        selectionEnd = Math.min(suffixStart, Math.max(selectionEnd, prefix.length));\n        selectionStart = Math.min(suffixStart, Math.max(selectionStart, prefix.length));\n        // Check if selection was entirely in the prefix or suffix. \n        if (selectionStart === selectionEnd &&\n            this.inputSelection.selectionStart !== this.inputSelection.selectionEnd) {\n            this.updateFieldValue(selectionStart);\n            return;\n        }\n        let decimalIndex = this.rawValue.indexOf(decimal);\n        if (decimalIndex === -1) {\n            decimalIndex = this.rawValue.length;\n        }\n        let shiftSelection = 0;\n        let insertChars = '';\n        const isCursorInDecimals = decimalIndex < selectionEnd;\n        const isCursorImmediatelyAfterDecimalPoint = decimalIndex + 1 === selectionEnd;\n        if (selectionEnd === selectionStart) {\n            if (keyCode == 8) {\n                if (selectionStart <= prefix.length) {\n                    return;\n                }\n                selectionStart--;\n                // If previous char isn't a number, go back one more.\n                if (!this.rawValue.substr(selectionStart, 1).match(/\\d/)) {\n                    selectionStart--;\n                }\n                // In natural mode, jump backwards when in decimal portion of number.\n                if (inputMode === CurrencyMaskInputMode.NATURAL && isCursorInDecimals) {\n                    shiftSelection = -1;\n                    // when removing a single whole number, replace it with 0\n                    if (isCursorImmediatelyAfterDecimalPoint && this.value < 10 && this.value > -10) {\n                        insertChars += '0';\n                    }\n                }\n            }\n            else if (keyCode == 46 || keyCode == 63272) {\n                if (selectionStart === suffixStart) {\n                    return;\n                }\n                selectionEnd++;\n                // If next char isn't a number, go one more.\n                if (!this.rawValue.substr(selectionStart, 1).match(/\\d/)) {\n                    selectionStart++;\n                    selectionEnd++;\n                }\n            }\n        }\n        // In natural mode, replace decimals with 0s.\n        if (inputMode === CurrencyMaskInputMode.NATURAL && selectionStart > decimalIndex) {\n            const replacedDecimalCount = selectionEnd - selectionStart;\n            for (let i = 0; i < replacedDecimalCount; i++) {\n                insertChars += '0';\n            }\n        }\n        let selectionFromEnd = this.rawValue.length - selectionEnd;\n        this.rawValue = this.rawValue.substring(0, selectionStart) + insertChars + this.rawValue.substring(selectionEnd);\n        // Remove leading thousand separator from raw value.\n        const startChar = this.rawValue.substr(prefix.length, 1);\n        if (startChar === thousands) {\n            this.rawValue = this.rawValue.substring(0, prefix.length) + this.rawValue.substring(prefix.length + 1);\n            selectionFromEnd = Math.min(selectionFromEnd, this.rawValue.length - prefix.length);\n        }\n        this.updateFieldValue(this.rawValue.length - selectionFromEnd + shiftSelection, true);\n    }\n    updateFieldValue(selectionStart, disablePadAndTrim = false) {\n        let newRawValue = this.applyMask(false, this.rawValue || \"\", disablePadAndTrim);\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n        selectionStart = Math.max(this.options.prefix.length, Math.min(selectionStart, this.rawValue.length - this.options.suffix.length));\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n    }\n    updateOptions(options) {\n        let value = this.value;\n        this.options = options;\n        this.value = value;\n    }\n    prefixLength() {\n        return this.options.prefix.length;\n    }\n    suffixLength() {\n        return this.options.suffix.length;\n    }\n    isNullable() {\n        return this.options.nullable;\n    }\n    get canInputMoreNumbers() {\n        return this.inputManager.canInputMoreNumbers;\n    }\n    get inputSelection() {\n        return this.inputManager.inputSelection;\n    }\n    get rawValue() {\n        return this.inputManager.rawValue;\n    }\n    set rawValue(value) {\n        this.inputManager.rawValue = value;\n    }\n    get storedRawValue() {\n        return this.inputManager.storedRawValue;\n    }\n    get value() {\n        return this.clearMask(this.rawValue);\n    }\n    set value(value) {\n        this.rawValue = this.applyMask(true, \"\" + value);\n    }\n    isNullOrUndefined(value) {\n        return value === null || value === undefined;\n    }\n}\nclass InputHandler {\n    constructor(htmlInputElement, options) {\n        this.inputService = new InputService(htmlInputElement, options);\n    }\n    handleCut(event) {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 0);\n    }\n    handleInput(event) {\n        let selectionStart = this.inputService.inputSelection.selectionStart;\n        let keyCode = this.inputService.rawValue.charCodeAt(selectionStart - 1);\n        let rawValueLength = this.inputService.rawValue.length;\n        let storedRawValueLength = this.inputService.storedRawValue.length;\n        if (Math.abs(rawValueLength - storedRawValueLength) != 1) {\n            this.inputService.updateFieldValue(selectionStart);\n            this.onModelChange(this.inputService.value);\n            return;\n        }\n        // Restore the old value.\n        this.inputService.rawValue = this.inputService.storedRawValue;\n        if (rawValueLength < storedRawValueLength) {\n            // Chrome Android seems to move the cursor in response to a backspace AFTER processing the\n            // input event, so we need to wrap this in a timeout.\n            this.timer(() => {\n                // Move the cursor to just after the deleted value.\n                this.inputService.updateFieldValue(selectionStart + 1);\n                // Then backspace it.\n                this.inputService.removeNumber(8);\n                this.onModelChange(this.inputService.value);\n            }, 0);\n        }\n        if (rawValueLength > storedRawValueLength) {\n            // Move the cursor to just before the new value.\n            this.inputService.updateFieldValue(selectionStart - 1);\n            // Process the character like a keypress.\n            this.handleKeypressImpl(keyCode);\n        }\n    }\n    handleKeydown(event) {\n        let keyCode = event.which || event.charCode || event.keyCode;\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\n            event.preventDefault();\n            if (this.inputService.inputSelection.selectionStart <= this.inputService.prefixLength() &&\n                this.inputService.inputSelection.selectionEnd >= this.inputService.rawValue.length - this.inputService.suffixLength()) {\n                this.clearValue();\n            }\n            else {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n        }\n    }\n    clearValue() {\n        this.setValue(this.inputService.isNullable() ? null : 0);\n        this.onModelChange(this.inputService.value);\n    }\n    handleKeypress(event) {\n        let keyCode = event.which || event.charCode || event.keyCode;\n        event.preventDefault();\n        if (keyCode === 97 && event.ctrlKey) {\n            return;\n        }\n        this.handleKeypressImpl(keyCode);\n    }\n    handleKeypressImpl(keyCode) {\n        switch (keyCode) {\n            case undefined:\n            case 9:\n            case 13:\n                return;\n            case 43:\n                this.inputService.changeToPositive();\n                break;\n            case 45:\n                this.inputService.changeToNegative();\n                break;\n            default:\n                if (this.inputService.canInputMoreNumbers) {\n                    let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\n                        this.setValue(null);\n                    }\n                    this.inputService.addNumber(keyCode);\n                }\n                break;\n        }\n        this.onModelChange(this.inputService.value);\n    }\n    handlePaste(event) {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 1);\n    }\n    updateOptions(options) {\n        this.inputService.updateOptions(options);\n    }\n    getOnModelChange() {\n        return this.onModelChange;\n    }\n    setOnModelChange(callbackFunction) {\n        this.onModelChange = callbackFunction;\n    }\n    getOnModelTouched() {\n        return this.onModelTouched;\n    }\n    setOnModelTouched(callbackFunction) {\n        this.onModelTouched = callbackFunction;\n    }\n    setValue(value) {\n        this.inputService.value = value;\n    }\n    /**\n     * Passthrough to setTimeout that can be stubbed out in tests.\n     */\n    timer(callback, delayMillis) {\n        setTimeout(callback, delayMillis);\n    }\n}\nconst CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR = {\n    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__[/* NG_VALUE_ACCESSOR */ \"n\"],\n    useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"bb\"])(() => CurrencyMaskDirective),\n    multi: true,\n};\nlet CurrencyMaskDirective = /*@__PURE__*/ (() => {\n    class CurrencyMaskDirective {\n        constructor(currencyMaskConfig, elementRef, keyValueDiffers) {\n            this.currencyMaskConfig = currencyMaskConfig;\n            this.elementRef = elementRef;\n            this.keyValueDiffers = keyValueDiffers;\n            this.options = {};\n            this.optionsTemplate = {\n                align: \"right\",\n                allowNegative: true,\n                allowZero: true,\n                decimal: \".\",\n                precision: 2,\n                prefix: \"$ \",\n                suffix: \"\",\n                thousands: \",\",\n                nullable: false,\n                inputMode: CurrencyMaskInputMode.FINANCIAL\n            };\n            if (currencyMaskConfig) {\n                this.optionsTemplate = currencyMaskConfig;\n            }\n            this.keyValueDiffer = keyValueDiffers.find({}).create();\n        }\n        ngAfterViewInit() {\n            this.elementRef.nativeElement.style.textAlign = this.options && this.options.align ? this.options.align : this.optionsTemplate.align;\n        }\n        ngDoCheck() {\n            if (this.keyValueDiffer.diff(this.options)) {\n                this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n                this.inputHandler.updateOptions(Object.assign({}, this.optionsTemplate, this.options));\n            }\n        }\n        ngOnInit() {\n            this.inputHandler = new InputHandler(this.elementRef.nativeElement, Object.assign({}, this.optionsTemplate, this.options));\n        }\n        handleBlur(event) {\n            this.inputHandler.getOnModelTouched().apply(event);\n        }\n        handleCut(event) {\n            if (!this.isChromeAndroid()) {\n                !this.isReadOnly() && this.inputHandler.handleCut(event);\n            }\n        }\n        handleInput(event) {\n            if (this.isChromeAndroid()) {\n                !this.isReadOnly() && this.inputHandler.handleInput(event);\n            }\n        }\n        handleKeydown(event) {\n            if (!this.isChromeAndroid()) {\n                !this.isReadOnly() && this.inputHandler.handleKeydown(event);\n            }\n        }\n        handleKeypress(event) {\n            if (!this.isChromeAndroid()) {\n                !this.isReadOnly() && this.inputHandler.handleKeypress(event);\n            }\n        }\n        handlePaste(event) {\n            if (!this.isChromeAndroid()) {\n                !this.isReadOnly() && this.inputHandler.handlePaste(event);\n            }\n        }\n        handleDrop(event) {\n            if (!this.isChromeAndroid()) {\n                event.preventDefault();\n            }\n        }\n        isChromeAndroid() {\n            return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\n        }\n        isReadOnly() {\n            return this.elementRef.nativeElement.hasAttribute('readonly');\n        }\n        registerOnChange(callbackFunction) {\n            this.inputHandler.setOnModelChange(callbackFunction);\n        }\n        registerOnTouched(callbackFunction) {\n            this.inputHandler.setOnModelTouched(callbackFunction);\n        }\n        setDisabledState(value) {\n            this.elementRef.nativeElement.disabled = value;\n        }\n        writeValue(value) {\n            this.inputHandler.setValue(value);\n        }\n    }\n    CurrencyMaskDirective.ɵfac = function CurrencyMaskDirective_Factory(t) { return new (t || CurrencyMaskDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Wb\"](CURRENCY_MASK_CONFIG, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Wb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"n\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Wb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* KeyValueDiffers */ \"x\"])); };\n    CurrencyMaskDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Rb\"]({ type: CurrencyMaskDirective, selectors: [[\"\", \"currencyMask\", \"\"]], hostBindings: function CurrencyMaskDirective_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"mc\"](\"blur\", function CurrencyMaskDirective_blur_HostBindingHandler($event) { return ctx.handleBlur($event); })(\"cut\", function CurrencyMaskDirective_cut_HostBindingHandler($event) { return ctx.handleCut($event); })(\"input\", function CurrencyMaskDirective_input_HostBindingHandler($event) { return ctx.handleInput($event); })(\"keydown\", function CurrencyMaskDirective_keydown_HostBindingHandler($event) { return ctx.handleKeydown($event); })(\"keypress\", function CurrencyMaskDirective_keypress_HostBindingHandler($event) { return ctx.handleKeypress($event); })(\"paste\", function CurrencyMaskDirective_paste_HostBindingHandler($event) { return ctx.handlePaste($event); })(\"drop\", function CurrencyMaskDirective_drop_HostBindingHandler($event) { return ctx.handleDrop($event); });\n            }\n        }, inputs: { options: \"options\" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"Hb\"]([CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR])] });\n    return CurrencyMaskDirective;\n})();\nlet NgxCurrencyModule = /*@__PURE__*/ (() => {\n    class NgxCurrencyModule {\n        static forRoot(config) {\n            return {\n                ngModule: NgxCurrencyModule,\n                providers: [{\n                        provide: CURRENCY_MASK_CONFIG,\n                        useValue: config,\n                    }]\n            };\n        }\n    }\n    NgxCurrencyModule.ɵfac = function NgxCurrencyModule_Factory(t) { return new (t || NgxCurrencyModule)(); };\n    NgxCurrencyModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineNgModule */ \"Ub\"]({ type: NgxCurrencyModule });\n    NgxCurrencyModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjector */ \"Tb\"]({ imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_2__[/* CommonModule */ \"c\"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__[/* FormsModule */ \"j\"]]] });\n    return NgxCurrencyModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵsetNgModuleScope */ \"Pc\"](NgxCurrencyModule, { declarations: function () { return [CurrencyMaskDirective]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_2__[/* CommonModule */ \"c\"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__[/* FormsModule */ \"j\"]]; }, exports: function () { return [CurrencyMaskDirective]; } }); })();\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=ngx-currency.js.map\n\n\n/***/ }),\n\n/***/ \"UnFQ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* reexport */ brands_service_BrandsService; });\n__webpack_require__.d(__webpack_exports__, \"c\", function() { return /* reexport */ categories_service_CategoriesService; });\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* reexport */ attributes_service_AttributesService; });\n__webpack_require__.d(__webpack_exports__, \"h\", function() { return /* reexport */ terms_service_TermsService; });\n__webpack_require__.d(__webpack_exports__, \"e\", function() { return /* reexport */ items_service_ItemsService; });\n__webpack_require__.d(__webpack_exports__, \"d\", function() { return /* reexport */ class_of_products_service_ClassOfProductsService; });\n__webpack_require__.d(__webpack_exports__, \"g\", function() { return /* reexport */ measurement_units_service[\"a\" /* MeasurementUnitsService */]; });\n__webpack_require__.d(__webpack_exports__, \"f\", function() { return /* reexport */ items_type_service_ItemsTypeService; });\n\n// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/map.js\nvar map = __webpack_require__(\"rdQv\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./src/app/utils/api-server.service.ts\nvar api_server_service = __webpack_require__(\"C6Ca\");\n\n// CONCATENATED MODULE: ./src/app/services/products/brands.service.ts\n\r\n\r\n\r\nlet brands_service_BrandsService = /*@__PURE__*/ (() => {\r\n    class BrandsService {\r\n        constructor(api) {\r\n            this.api = api;\r\n        }\r\n        getAll() {\r\n            const ts = this;\r\n            return ts.api.get(`/products/brands/read/all`)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/brands/read`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    BrandsService.ɵfac = function BrandsService_Factory(t) { return new (t || BrandsService)(core[\"jc\" /* ɵɵinject */](api_server_service[\"a\" /* ApiServerService */])); };\r\n    BrandsService.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: BrandsService, factory: BrandsService.ɵfac, providedIn: 'root' });\r\n    return BrandsService;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/services/products/categories.service.ts\n\r\n\r\n\r\nlet categories_service_CategoriesService = /*@__PURE__*/ (() => {\r\n    class CategoriesService {\r\n        constructor(api) {\r\n            this.api = api;\r\n        }\r\n        getAll(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/categories/read/all`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getChids(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/categories/childs`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getParents(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/categories/parents`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/categories/read`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    CategoriesService.ɵfac = function CategoriesService_Factory(t) { return new (t || CategoriesService)(core[\"jc\" /* ɵɵinject */](api_server_service[\"a\" /* ApiServerService */])); };\r\n    CategoriesService.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: CategoriesService, factory: CategoriesService.ɵfac, providedIn: 'root' });\r\n    return CategoriesService;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/services/products/attributes.service.ts\n\r\n\r\n\r\nlet attributes_service_AttributesService = /*@__PURE__*/ (() => {\r\n    class AttributesService {\r\n        constructor(api) {\r\n            this.api = api;\r\n        }\r\n        getAll(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/attributes/all`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/attributes/read`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    AttributesService.ɵfac = function AttributesService_Factory(t) { return new (t || AttributesService)(core[\"jc\" /* ɵɵinject */](api_server_service[\"a\" /* ApiServerService */])); };\r\n    AttributesService.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: AttributesService, factory: AttributesService.ɵfac, providedIn: 'root' });\r\n    return AttributesService;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/services/products/terms.service.ts\n\r\n\r\n\r\nlet terms_service_TermsService = /*@__PURE__*/ (() => {\r\n    class TermsService {\r\n        constructor(api) {\r\n            this.api = api;\r\n        }\r\n        getAll(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/terms/all`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/terms/read`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    TermsService.ɵfac = function TermsService_Factory(t) { return new (t || TermsService)(core[\"jc\" /* ɵɵinject */](api_server_service[\"a\" /* ApiServerService */])); };\r\n    TermsService.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: TermsService, factory: TermsService.ɵfac, providedIn: 'root' });\r\n    return TermsService;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/services/products/items.service.ts\n\r\n\r\n\r\nlet items_service_ItemsService = /*@__PURE__*/ (() => {\r\n    class ItemsService {\r\n        constructor(api) {\r\n            this.api = api;\r\n        }\r\n        getAll(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/items/all`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getSalesProducts(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/items/read/sales`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getDataSales(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/items/read/all`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/items/read`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    ItemsService.ɵfac = function ItemsService_Factory(t) { return new (t || ItemsService)(core[\"jc\" /* ɵɵinject */](api_server_service[\"a\" /* ApiServerService */])); };\r\n    ItemsService.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: ItemsService, factory: ItemsService.ɵfac, providedIn: 'root' });\r\n    return ItemsService;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/services/products/class-of-products.service.ts\n\r\n\r\n\r\nlet class_of_products_service_ClassOfProductsService = /*@__PURE__*/ (() => {\r\n    class ClassOfProductsService {\r\n        constructor(api) {\r\n            this.api = api;\r\n        }\r\n        getData() {\r\n            const ts = this;\r\n            return ts.api.get(`/products/class`)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    ClassOfProductsService.ɵfac = function ClassOfProductsService_Factory(t) { return new (t || ClassOfProductsService)(core[\"jc\" /* ɵɵinject */](api_server_service[\"a\" /* ApiServerService */])); };\r\n    ClassOfProductsService.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: ClassOfProductsService, factory: ClassOfProductsService.ɵfac, providedIn: 'root' });\r\n    return ClassOfProductsService;\r\n})();\r\n\n// EXTERNAL MODULE: ./src/app/services/products/measurement-units.service.ts\nvar measurement_units_service = __webpack_require__(\"7q1N\");\n\n// CONCATENATED MODULE: ./src/app/services/products/items-type.service.ts\n\r\n\r\n\r\nlet items_type_service_ItemsTypeService = /*@__PURE__*/ (() => {\r\n    class ItemsTypeService {\r\n        constructor(api) {\r\n            this.api = api;\r\n        }\r\n        getItemTypeAccounts(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/groups/getItemTypeAccounts`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getAll(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/groups/all`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getType(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/accounttypes`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/products/groups/read`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    ItemsTypeService.ɵfac = function ItemsTypeService_Factory(t) { return new (t || ItemsTypeService)(core[\"jc\" /* ɵɵinject */](api_server_service[\"a\" /* ApiServerService */])); };\r\n    ItemsTypeService.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: ItemsTypeService, factory: ItemsTypeService.ɵfac, providedIn: 'root' });\r\n    return ItemsTypeService;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/services/products/index.ts\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n/***/ }),\n\n/***/ \"dKyG\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"c\", function() { return /* reexport */ class_of_accounting_service_ClassOfAccountingService; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* reexport */ accounts_service_AccountsService; });\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* reexport */ accounting_groups_service[\"a\" /* AccountingGroupsService */]; });\n\n// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/map.js\nvar map = __webpack_require__(\"rdQv\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./src/app/utils/api-server.service.ts\nvar api_server_service = __webpack_require__(\"C6Ca\");\n\n// CONCATENATED MODULE: ./src/app/services/accounting/class-of-accounting.service.ts\n\r\n\r\n\r\nlet class_of_accounting_service_ClassOfAccountingService = /*@__PURE__*/ (() => {\r\n    class ClassOfAccountingService {\r\n        constructor(api) {\r\n            this.api = api;\r\n            this.data = [];\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/accounting/clasofaccounts/read`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    ClassOfAccountingService.ɵfac = function ClassOfAccountingService_Factory(t) { return new (t || ClassOfAccountingService)(core[\"jc\" /* ɵɵinject */](api_server_service[\"a\" /* ApiServerService */])); };\r\n    ClassOfAccountingService.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: ClassOfAccountingService, factory: ClassOfAccountingService.ɵfac, providedIn: 'root' });\r\n    return ClassOfAccountingService;\r\n})();\r\n\n// CONCATENATED MODULE: ./src/app/services/accounting/accounts.service.ts\n\r\n\r\n\r\nlet accounts_service_AccountsService = /*@__PURE__*/ (() => {\r\n    class AccountsService {\r\n        constructor(api) {\r\n            this.api = api;\r\n            this.data = [];\r\n        }\r\n        getMasterAccounts(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/accounting/accounts/read/masteraccounts`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getsubAccounts(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/accounting/accounts/read/subaccounts`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getDataAll(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/accounting/accounts/read/subaccounts`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/accounting/accounts/read`, params)\r\n                .pipe(Object(map[\"a\" /* map */])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    AccountsService.ɵfac = function AccountsService_Factory(t) { return new (t || AccountsService)(core[\"jc\" /* ɵɵinject */](api_server_service[\"a\" /* ApiServerService */])); };\r\n    AccountsService.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: AccountsService, factory: AccountsService.ɵfac, providedIn: 'root' });\r\n    return AccountsService;\r\n})();\r\n\n// EXTERNAL MODULE: ./src/app/services/accounting/accounting-groups.service.ts\nvar accounting_groups_service = __webpack_require__(\"fFJT\");\n\n// CONCATENATED MODULE: ./src/app/services/accounting/index.ts\n\r\n\r\n\r\n\n\n/***/ }),\n\n/***/ \"fFJT\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AccountingGroupsService; });\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"rdQv\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"C6Ca\");\n\r\n\r\n\r\nlet AccountingGroupsService = /*@__PURE__*/ (() => {\r\n    class AccountingGroupsService {\r\n        constructor(api) {\r\n            this.api = api;\r\n            this.data = [];\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get(`/accounting/accountinggroups/read`, params)\r\n                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__[/* map */ \"a\"])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    AccountingGroupsService.ɵfac = function AccountingGroupsService_Factory(t) { return new (t || AccountingGroupsService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵinject */ \"jc\"](_utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__[/* ApiServerService */ \"a\"])); };\r\n    AccountingGroupsService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjectable */ \"Sb\"]({ token: AccountingGroupsService, factory: AccountingGroupsService.ɵfac, providedIn: 'root' });\r\n    return AccountingGroupsService;\r\n})();\r\n\n\n/***/ }),\n\n/***/ \"xg8E\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* reexport */ form_component[\"a\" /* FormComponent */]; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* reexport */ form_spinner_component_FormSpinnerComponent; });\n\n// UNUSED EXPORTS: FooterFormComponent\n\n// EXTERNAL MODULE: ./src/app/core/components/forms/form.component.ts\nvar form_component = __webpack_require__(\"TK7J\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./src/app/utils/index.ts + 2 modules\nvar utils = __webpack_require__(\"YMfE\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js + 4 modules\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js\nvar ngx_translate_core = __webpack_require__(\"sYmb\");\n\n// EXTERNAL MODULE: ./node_modules/ngx-spinner/__ivy_ngcc__/fesm2015/ngx-spinner.js\nvar ngx_spinner = __webpack_require__(\"JqCM\");\n\n// CONCATENATED MODULE: ./src/app/core/components/forms/form-spinner.component.ts\n// Base component\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet form_spinner_component_FormSpinnerComponent = /*@__PURE__*/ (() => {\r\n    class FormSpinnerComponent extends form_component[\"a\" /* FormComponent */] {\r\n        constructor(fb, msg, api, router, translate, aRouter, spinner) {\r\n            super(fb, msg, api, router, translate, aRouter, spinner);\r\n            this.fb = fb;\r\n            this.msg = msg;\r\n            this.api = api;\r\n            this.router = router;\r\n            this.translate = translate;\r\n            this.aRouter = aRouter;\r\n            this.spinner = spinner;\r\n        }\r\n        showSpinner(mask = '') {\r\n            this.maskSpinner = mask;\r\n            this.spinner.show(undefined, {\r\n                type: 'ball-triangle-path',\r\n                size: 'medium',\r\n                bdColor: 'rgba(0, 0, 0, 0.8)',\r\n                color: '#fff',\r\n                fullScreen: true\r\n            });\r\n        }\r\n        hideSpinner() {\r\n            this.spinner.hide();\r\n        }\r\n        fullLoad() {\r\n            this.spinner.hide();\r\n        }\r\n    }\r\n    FormSpinnerComponent.ɵfac = function FormSpinnerComponent_Factory(t) { return new (t || FormSpinnerComponent)(core[\"jc\" /* ɵɵinject */](fesm2015_forms[\"e\" /* FormBuilder */]), core[\"jc\" /* ɵɵinject */](utils[\"b\" /* MessagesService */]), core[\"jc\" /* ɵɵinject */](utils[\"a\" /* ApiServerService */]), core[\"jc\" /* ɵɵinject */](router[\"c\" /* Router */]), core[\"jc\" /* ɵɵinject */](ngx_translate_core[\"d\" /* TranslateService */]), core[\"jc\" /* ɵɵinject */](router[\"a\" /* ActivatedRoute */]), core[\"jc\" /* ɵɵinject */](ngx_spinner[\"c\" /* NgxSpinnerService */])); };\r\n    FormSpinnerComponent.ɵprov = core[\"Sb\" /* ɵɵdefineInjectable */]({ token: FormSpinnerComponent, factory: FormSpinnerComponent.ɵfac });\r\n    return FormSpinnerComponent;\r\n})();\r\n\n// EXTERNAL MODULE: ./src/app/core/components/forms/footer-form/footer-form.component.ts\nvar footer_form_component = __webpack_require__(\"uHPU\");\n\n// CONCATENATED MODULE: ./src/app/core/components/forms/index.ts\n\r\n\r\n\r\n\n\n/***/ }),\n\n/***/ \"zC4a\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TaxRatesService; });\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"rdQv\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"C6Ca\");\n\r\n\r\n\r\nlet TaxRatesService = /*@__PURE__*/ (() => {\r\n    class TaxRatesService {\r\n        constructor(api) {\r\n            this.api = api;\r\n            this.data = [];\r\n        }\r\n        getData(params) {\r\n            const ts = this;\r\n            return ts.api.get('/general/taxerates/read', params)\r\n                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__[/* map */ \"a\"])((resp) => {\r\n                return resp.records;\r\n            }));\r\n        }\r\n    }\r\n    TaxRatesService.ɵfac = function TaxRatesService_Factory(t) { return new (t || TaxRatesService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵinject */ \"jc\"](_utils_api_server_service__WEBPACK_IMPORTED_MODULE_2__[/* ApiServerService */ \"a\"])); };\r\n    TaxRatesService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjectable */ \"Sb\"]({ token: TaxRatesService, factory: TaxRatesService.ɵfac, providedIn: 'root' });\r\n    return TaxRatesService;\r\n})();\r\n\n\n/***/ })\n\n}]);","inputSourceMap":null}