{"version":3,"sources":["../../../projects/ngx-star-rating/src/lib/ngx-star-rating.service.ts","../../../projects/ngx-star-rating/src/lib/ngx-star-rating.component.ts","../../../projects/ngx-star-rating/src/lib/ngx-star-rating.module.ts"],"names":["Injectable","args","providedIn","NgxStarRatingComponent","this","stars","propagateChange","_","disabled","prototype","ngOnInit","rate","writeValue","value","ngxCheckbox","forEach","checkbox","nativeElement","checked","registerOnChange","fn","registerOnTouched","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Input","ViewChildren","NgModule","declarations","imports","CommonModule","exports"],"mappings":"0bAOE,4HALDA,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kECqBZ,SAAAC,IANAC,KAAAC,MAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GAmCbD,KAAAE,gBAAkB,SAACC,KA5BpBH,KAAKI,WACRJ,KAAKI,UAAW,UAIpBL,EAAAM,UAAAC,SAAA,aAEAP,EAAAM,UAAAE,KAAA,SAAKA,GACEP,KAAKI,UACRJ,KAAKE,gBAAgBK,IAIzBR,EAAAM,UAAAG,WAAA,SAAWC,GACLT,KAAKU,aAAyB,OAAVD,GACtBT,KAAKU,YAAYC,SAAQ,SAACC,GACxBA,EAASC,cAAcC,SAAU,KAGrCd,KAAKS,MAAQA,GAGfV,EAAAM,UAAAU,iBAAA,SAAiBC,GACfhB,KAAKE,gBAAkBc,GAGzBjB,EAAAM,UAAAY,kBAAA,SAAkBD,8BAhDnBE,EAAAA,UAASrB,KAAA,CAAC,CACTsB,SAAU,kBACVC,SAAA,2YAEAC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA1B,KAC9B2B,OAAO,u5BASVC,EAAAA,wBACAA,EAAAA,2BACAC,EAAAA,aAAY/B,KAAA,CAAC,wBCXhB,iCAPCgC,EAAAA,SAAQhC,KAAA,CAAC,CACRiC,aAAc,CAAC/B,GACfgC,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAAClC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxStarRatingService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ngx-star-rating',\r\n  templateUrl: 'ngx-star-rating.component.html',\r\n  styleUrls: ['ngx-star-rating.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NgxStarRatingComponent),\r\n      multi: true,\r\n    }\r\n  ]\r\n})\r\nexport class NgxStarRatingComponent implements OnInit, ControlValueAccessor {\r\n  onChange;\r\n  value;\r\n  stars = [5, 4, 3, 2, 1];\r\n\r\n  @Input() id: string;\r\n  @Input() disabled: boolean;\r\n  @ViewChildren('ngxCheckbox') ngxCheckbox: QueryList<ElementRef>;\r\n\r\n  constructor() {\r\n    if (!this.disabled) {\r\n      this.disabled = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  rate(rate) {\r\n    if (!this.disabled) {\r\n      this.propagateChange(rate);\r\n    }\r\n  }\r\n\r\n  writeValue(value) {\r\n    if (this.ngxCheckbox && value === null) {\r\n      this.ngxCheckbox.forEach((checkbox: ElementRef) => {\r\n        checkbox.nativeElement.checked = false;\r\n      });\r\n    }\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn) {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn) { }\r\n\r\n  private propagateChange = (_: any) => { };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { NgxStarRatingComponent } from './ngx-star-rating.component';\n\n@NgModule({\n  declarations: [NgxStarRatingComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxStarRatingComponent]\n})\nexport class NgxStarRatingModule { }\n"]}