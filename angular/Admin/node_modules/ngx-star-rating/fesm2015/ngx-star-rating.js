import { ɵɵdefineInjectable, Injectable, Component, forwardRef, Input, ViewChildren, NgModule } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { CommonModule } from '@angular/common';

class NgxStarRatingService {
    constructor() { }
}
NgxStarRatingService.ɵprov = ɵɵdefineInjectable({ factory: function NgxStarRatingService_Factory() { return new NgxStarRatingService(); }, token: NgxStarRatingService, providedIn: "root" });
NgxStarRatingService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
NgxStarRatingService.ctorParameters = () => [];

class NgxStarRatingComponent {
    constructor() {
        this.stars = [5, 4, 3, 2, 1];
        this.propagateChange = (_) => { };
        if (!this.disabled) {
            this.disabled = false;
        }
    }
    ngOnInit() { }
    rate(rate) {
        if (!this.disabled) {
            this.propagateChange(rate);
        }
    }
    writeValue(value) {
        if (this.ngxCheckbox && value === null) {
            this.ngxCheckbox.forEach((checkbox) => {
                checkbox.nativeElement.checked = false;
            });
        }
        this.value = value;
    }
    registerOnChange(fn) {
        this.propagateChange = fn;
    }
    registerOnTouched(fn) { }
}
NgxStarRatingComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-star-rating',
                template: "<form action=\"\">\r\n  <ng-template ngFor let-star [ngForOf]=\"stars\" let-i=\"index\">\r\n    <input #ngxCheckbox class=\"star star-{{ star }}\" id=\"star-{{ star }}-{{ id }}\" type=\"radio\" name=\"star\" (click)=\"rate(star)\"\r\n      [checked]=\"value == star\" [disabled]=\"disabled\" />\r\n    <label class=\"star star-{{ star }}\" for=\"star-{{ star }}-{{ id }}\"></label>\r\n  </ng-template>\r\n</form>\r\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => NgxStarRatingComponent),
                        multi: true,
                    }
                ],
                styles: ["@charset \"UTF-8\";*{font-family:roboto;margin:0;padding:0}body{background:#000}.cont{background:#111;border:thin solid #444;border-radius:5px;color:#eee;margin:4% auto;max-width:350px;overflow:hidden;padding:30px 0;text-align:center;width:93%}hr{border:none;border-bottom:thin solid hsla(0,0%,100%,.1);margin:20px}div.title{font-size:2em}h1 span{color:#fd4;font-weight:300}div.stars{display:inline-block;width:270px}input.star{display:none}label.star{color:#444;float:right;font-size:36px;padding:10px;transition:all .2s}input.star:checked~label.star:before{color:#fd4;content:\"\uF005\";transition:all .25s}input.star-5:checked~label.star:before{color:#fe7;text-shadow:0 0 20px #952}input.star-1:checked~label.star:before{color:#f62}label.star:hover{transform:rotate(-15deg) scale(1.3)}label.star:before{content:\"\uF006\";font-family:FontAwesome}"]
            },] }
];
NgxStarRatingComponent.ctorParameters = () => [];
NgxStarRatingComponent.propDecorators = {
    id: [{ type: Input }],
    disabled: [{ type: Input }],
    ngxCheckbox: [{ type: ViewChildren, args: ['ngxCheckbox',] }]
};

class NgxStarRatingModule {
}
NgxStarRatingModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NgxStarRatingComponent],
                imports: [
                    CommonModule
                ],
                exports: [NgxStarRatingComponent]
            },] }
];

/*
 * Public API Surface of ngx-star-rating
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgxStarRatingComponent, NgxStarRatingModule, NgxStarRatingService };
//# sourceMappingURL=ngx-star-rating.js.map
