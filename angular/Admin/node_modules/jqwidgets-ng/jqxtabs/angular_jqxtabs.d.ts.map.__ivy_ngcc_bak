{"version":3,"file":"angular_jqxtabs.d.ts","sources":["angular_jqxtabs.d.ts"],"names":[],"mappingssourcesContent":["/// <reference path=\"../jqwidgets.d.ts\" />\r\nimport { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\r\nexport declare class jqxTabsComponent implements OnChanges {\r\n    attrAnimationType: string;\r\n    attrAutoHeight: boolean;\r\n    attrCloseButtonSize: number;\r\n    attrCollapsible: boolean;\r\n    attrContentTransitionDuration: number;\r\n    attrDisabled: boolean;\r\n    attrEnabledHover: boolean;\r\n    attrEnableScrollAnimation: boolean;\r\n    attrEnableDropAnimation: boolean;\r\n    attrInitTabContent: (tab?: number) => void;\r\n    attrKeyboardNavigation: boolean;\r\n    attrNext: any;\r\n    attrPrevious: any;\r\n    attrPosition: string;\r\n    attrReorder: boolean;\r\n    attrRtl: boolean;\r\n    attrScrollAnimationDuration: number;\r\n    attrSelectedItem: number;\r\n    attrSelectionTracker: boolean;\r\n    attrScrollable: boolean;\r\n    attrScrollPosition: string;\r\n    attrScrollStep: number;\r\n    attrShowCloseButtons: boolean;\r\n    attrToggleMode: string;\r\n    attrTheme: string;\r\n    attrWidth: string | number;\r\n    attrHeight: string | number;\r\n    autoCreate: boolean;\r\n    properties: string[];\r\n    host: any;\r\n    elementRef: ElementRef;\r\n    widgetObject: jqwidgets.jqxTabs;\r\n    constructor(containerElement: ElementRef);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): boolean;\r\n    arraysEqual(attrValue: any, hostValue: any): boolean;\r\n    manageAttributes(): any;\r\n    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;\r\n    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;\r\n    createComponent(options?: any): void;\r\n    createWidget(options?: any): void;\r\n    __updateRect__(): void;\r\n    setOptions(options: any): void;\r\n    animationType(arg?: string): string;\r\n    autoHeight(arg?: boolean): boolean;\r\n    closeButtonSize(arg?: number): number;\r\n    collapsible(arg?: boolean): boolean;\r\n    contentTransitionDuration(arg?: number): number;\r\n    disabled(arg?: boolean): boolean;\r\n    enabledHover(arg?: boolean): boolean;\r\n    enableScrollAnimation(arg?: boolean): boolean;\r\n    enableDropAnimation(arg?: boolean): boolean;\r\n    height(arg?: string | number): string | number;\r\n    initTabContent(arg?: (tab?: number) => void): (tab?: number) => void;\r\n    keyboardNavigation(arg?: boolean): boolean;\r\n    next(arg?: any): any;\r\n    previous(arg?: any): any;\r\n    position(arg?: string): string;\r\n    reorder(arg?: boolean): boolean;\r\n    rtl(arg?: boolean): boolean;\r\n    scrollAnimationDuration(arg?: number): number;\r\n    selectedItem(arg?: number): number;\r\n    selectionTracker(arg?: boolean): boolean;\r\n    scrollable(arg?: boolean): boolean;\r\n    scrollPosition(arg?: string): string;\r\n    scrollStep(arg?: number): number;\r\n    showCloseButtons(arg?: boolean): boolean;\r\n    toggleMode(arg?: string): string;\r\n    theme(arg?: string): string;\r\n    width(arg?: string | number): string | number;\r\n    addAt(index: number, title: string, content: string): void;\r\n    addFirst(htmlElement1: any, htmlElement2: any): void;\r\n    addLast(htmlElement1: any, htmlElement2?: any): void;\r\n    collapse(): void;\r\n    disable(): void;\r\n    disableAt(index: number): void;\r\n    destroy(): void;\r\n    ensureVisible(index: number): void;\r\n    enableAt(index: number): void;\r\n    expand(): void;\r\n    enable(): void;\r\n    focus(): void;\r\n    getTitleAt(index: number): string;\r\n    getContentAt(index: number): any;\r\n    getDisabledTabsCount(): any;\r\n    hideCloseButtonAt(index: number): void;\r\n    hideAllCloseButtons(): void;\r\n    length(): number;\r\n    removeAt(index: number): void;\r\n    removeFirst(): void;\r\n    removeLast(): void;\r\n    select(index: number): void;\r\n    setContentAt(index: number, htmlElement: string): void;\r\n    setTitleAt(index: number, htmlElement: string): void;\r\n    showCloseButtonAt(index: number): void;\r\n    showAllCloseButtons(): void;\r\n    val(value?: string): any;\r\n    onAdd: EventEmitter<any>;\r\n    onCollapsed: EventEmitter<any>;\r\n    onDragStart: EventEmitter<any>;\r\n    onDragEnd: EventEmitter<any>;\r\n    onExpanded: EventEmitter<any>;\r\n    onRemoved: EventEmitter<any>;\r\n    onSelecting: EventEmitter<any>;\r\n    onSelected: EventEmitter<any>;\r\n    onTabclick: EventEmitter<any>;\r\n    onUnselecting: EventEmitter<any>;\r\n    onUnselected: EventEmitter<any>;\r\n    __wireEvents__(): void;\r\n}\r\n"]}